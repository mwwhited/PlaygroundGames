DECLARE SUB PROBECLEAR ()
DECLARE SUB PROBESUB ()
DECLARE SUB SCORESUB ()
DECLARE SUB STATS ()
DECLARE SUB FLEETSUB ()
DECLARE SUB DELAYSUB ()
DECLARE SUB SENSORSSUB ()
DECLARE SUB INTRO ()
DECLARE SUB TEST ()
DECLARE SUB LEVELSUB ()
DECLARE SUB ALARM ()
DECLARE SUB INSTRUCTIONS ()
DECLARE SUB WARPSUB ()
DECLARE SUB SREPAIRS ()
DECLARE SUB KREPAIRS ()
DECLARE SUB SHIPDESTROYED ()
DECLARE SUB IMPULSESUB ()
DECLARE SUB SHIPSSUB ()
DECLARE SUB PHASERSSUB ()
DECLARE SUB ENERGYSUB ()
DECLARE SUB BORDER ()
DECLARE SUB DRIVESUB ()
DECLARE SUB COMMANDSSUB ()
DECLARE SUB MAPSETUP ()
DECLARE SUB DISPLAY ()
DECLARE SUB SHIELDSSUB ()
DECLARE SUB OMEGANSSUB ()
DECLARE SUB TORPEDOESSUB ()
DECLARE SUB KDESTROYED ()
DECLARE SUB STARSSUB ()
DECLARE SUB ENEMYFIRESUB ()
DECLARE SUB DOCKING ()
DECLARE SUB WINGAME ()
DECLARE SUB KLMOVE ()
DECLARE SUB DAMAGESUB ()
DECLARE SUB RAND ()
COMMON SHARED STARSHIPS, SHIELDS, PHASERS, TORPEDOES, DAMAGE, ENERGY
COMMON SHARED STARBASES, DRIVE, SHLDS$, SECTORX, SECTORY, TOTAL
COMMON SHARED IMPULSE, KHIT, SCORE, SBX, SBY, SHIELDSC, NEXTTRN
COMMON SHARED SYSDMG, PDMG, WDMG, SDMG, IDMG, TDMG, STRDT, KSTART
COMMON SHARED RNDN, DATEOLD, DATENEW, DATE, CLASS
COMMON SHARED COMMANDS$, LEVEL, KDSTRYD, LSTRDT, RETREAT, fleet$
COMMON SHARED MDELAY, LDMG, SENSORS, SENSORS$, SDELAY, WDELAY, ENEMY$, EN$
COMMON SHARED RATE, PROBE, PROBE$, F$
RANDOMIZE TIMER
CLS
SCREEN 13
WIDTH 40, 25
CALL INTRO
CLS
COLOR 13
PRINT "CAPSLOCK"; : COLOR 5: PRINT " MUST BE ON TO OPERATE THIS GAME"
PRINT : COLOR 5
PRINT "INSTRUCTIONS AND REVISIONS ("; : COLOR 13
PRINT "Y"; : COLOR 5: PRINT "ES "; : COLOR 13: PRINT "N"; : COLOR 5: PRINT "O)"
DO
A$ = INKEY$
A$ = UCASE$(A$)
LOOP UNTIL A$ <> ""
IF A$ = "Y" THEN CALL INSTRUCTIONS
CLS
CALL FLEETSUB
CLS

'VARIABLES

DIM SHARED SECTOR(10, 10), TORPEDO(4), PHASERS(3), SYSTEMS(5)
DIM SHARED SBX(5), SBY(5), STX(100), STY(100), STC(100), DAMAGE(3)
DIM SHARED BRDR(25, 40), KSHLD(50), KTYPE(50), KX(3), KY(3), EN(1)
DIM SHARED KN(3), KSX(50), KSY(50), KR(3), RANGE$(3), KDMG(50)
DIM SHARED RNDM(3), RN(5), KMOVE(3), EVADING(3), LEAVING(3), ARRIVING(3)
DIM SHARED XX(25), YY(25), DX(25), DY(25), CL(25), PROBE(10, 10)

CALL STATS
MDELAY = 2 * .5: SDELAY = 2 * .5: WDELAY = 2 * .5
RATE = 200
CALL DAMAGESUB: CALL LEVELSUB
IF ENEMY$ = "F" THEN EN$ = "FEDERATION"
IF ENEMY$ = "G" THEN EN$ = "GORN"
IF ENEMY$ = "K" THEN EN$ = "KLINGON"
IF ENEMY$ = "R" THEN EN$ = "ROMULAN"
CLS
KSTART = STARSHIPS
DATENEW = STRDT
DATA S,M,L
FOR A = 1 TO 3: READ RANGE$(A): NEXT
FOR A = 1 TO 5: SYSTEMS(A) = 1: NEXT
'GAMEPLAY
                 
CALL MAPSETUP
CALL STARSSUB
CALL BORDER
CALL DISPLAY
CALL SHIELDSSUB
FOR B = 1 TO STARSHIPS
 A = KTYPE(B)
 IF A <= 4 THEN TOTAL = TOTAL + (A * 250)
 IF A = 5 OR A = 9 OR A = 13 THEN TOTAL = TOTAL + 1000
 IF A = 6 OR A = 10 OR A = 14 THEN TOTAL = TOTAL + 750
 IF A = 7 OR A = 11 OR A = 15 THEN TOTAL = TOTAL + 500
 IF A = 8 OR A = 12 OR A = 16 THEN TOTAL = TOTAL + 250
NEXT B
CALL DELAYSUB

RESTART:
NEXTTRN = 0
DO
 CALL COMMANDSSUB
 CALL DISPLAY
 IF SECTOR(SECTORX, SECTORY) >= 9 THEN CALL DOCKING
LOOP UNTIL NEXTTRN >= 1
J0 = SECTOR(SECTORX, SECTORY)
IF J0 > 0 AND J0 < 5 AND NEXTTRN > 0 THEN CALL ENEMYFIRESUB
IF NEXTTRN > 0 THEN
 STRDT = STRDT - 1
 IF PROBE$ = "CLEAR" THEN
  CALL PROBECLEAR
 END IF
 IF PROBE$ = "YES" THEN
  PROBE$ = "CLEAR"
 END IF
 CALL ENERGYSUB
 FOR A = 1 TO DATE
  CALL KREPAIRS: CALL SREPAIRS: CALL KLMOVE
 NEXT A
END IF
IF NEXTTRN > 0 THEN CALL SHIPSSUB: CALL STARSSUB
IF STRDT < 1 THEN CALL WINGAME
GOTO RESTART

SUB ALARM
 FOR QQ = 1 TO 3
 SA = 1000: SB = 1100
 FOR SND = 1 TO 50
 FOR SS = SA TO SB STEP 20 * SDELAY
 SOUND SS, .05
 NEXT SS
 SA = SA + 2: SB = SB + 2
 NEXT SND
 NEXT QQ
END SUB

SUB BORDER

FOR A = 1 TO 40
BRDR(1, A) = 196
BRDR(11, A) = 196
BRDR(23, A) = 196
IF A < 24 THEN
 BRDR(A, 1) = 179
 BRDR(A, 40) = 179
END IF
IF A < 12 THEN BRDR(11 + A, 24) = 179
NEXT A
BRDR(1, 1) = 218
BRDR(1, 40) = 191
BRDR(11, 1) = 195
BRDR(11, 24) = 194
BRDR(11, 40) = 180
BRDR(23, 1) = 192
BRDR(23, 24) = 193
BRDR(23, 40) = 217

END SUB

SUB COMMANDSSUB
NEWCOMMAND:
LOCATE 12, 2: PRINT SPACE$(22)
LOCATE 12, 2: COLOR 7: PRINT "COMMAND: ": COLOR 15
A$ = ""
DO
 A$ = INKEY$
 A$ = UCASE$(A$)
 IF A$ = CHR$(27) THEN CLS : LOCATE 1, 1: COLOR 13: PRINT "GAME ABORTED": END
 IF A$ = "Z" THEN CALL DELAYSUB: GOTO NEWCOMMAND
 IF A$ = "Q" THEN CALL SCORESUB: GOTO NEWCOMMAND
LOOP WHILE A$ <> "S" AND A$ <> "P" AND A$ <> "W" AND A$ <> "T" AND A$ <> "I" AND A$ <> CHR$(9) AND A$ <> "E" AND A$ <> "L" AND A$ <> "D" AND A$ <> "B" AND A$ <> "R"
IF fleet$ <> "F" AND A$ = "P" THEN GOTO NEWCOMMAND
LOCATE 12, 11
GOTO HELL
NO = 0
IF A$ = "S" AND SHIELDS <= 0 THEN NO = 1
IF (A$ = "B" OR A$ = "P" OR A$ = "D") AND PHASERS <= 0 THEN NO = 1
IF A$ = "W" AND DRIVE <= 0 THEN NO = 1
IF A$ = "W" AND DRIVE <= 200 THEN NO = 3: NO$ = "NOT ENOUGH ENERGY!"
IF A$ = "W" AND DRIVE <= 250 AND WDMG = 1 THEN NO = 3: NO$ = "NOT ENOUGH ENERGY!"
IF A$ = "T" AND TORPEDOES <= 0 THEN NO = 2
IF A$ = "I" AND IMPULSE <= 0 THEN NO = 1
IF A$ = "L" AND SENSORS < 125 THEN NO = 3: NO$ = "NOT ENOUGH ENERGY!"
IF A$ = "L" AND SENSORS$ = "ON" THEN NO$ = "ALREADY ACTIVATED!": NO = 3
IF A$ = "R" AND ENERGY < 50 THEN NO$ = "NOT ENOUGH ENERGY!": NO = 3
IF A$ = "R" AND PROBE < 1 THEN NO$ = "NO MORE PROBES!": NO = 3
ZZ = SECTOR(SECTORX, SECTORY)
IF (A$ = "P" OR A$ = "B" OR A$ = "D") AND ZZ = 0 THEN NO$ = "NO ENEMY STARSHIPS!": NO = 3
IF A$ = "I" AND ZZ = 0 THEN NO$ = "NO ENEMY STARSHIPS!": NO = 3
IF A$ = "T" AND ZZ = 0 THEN NO$ = "NO ENEMY STARSHIPS!": NO = 3
IF (A$ = "P" OR A$ = "T" OR A$ = "B" OR A$ = "D") AND NEXTTRN = .6 THEN NO$ = "ALREADY FIRED!": NO = 3
IF (A$ = "I" OR A$ = "W") AND NEXTTRN = .4 THEN NO$ = "ALREADY MOVED!": NO = 3
IF NO = 1 THEN NO$ = "NO ENERGY!"
IF NO = 2 THEN NO$ = "NO TORPEDOES!"
IF NO > 0 THEN
 COLOR 15
 LOCATE 12, 2: PRINT SPACE$(22)
 LOCATE 12, 2: PRINT NO$
 FOR TM = 1 TO 6000 * MDELAY: NEXT
 GOTO NEWCOMMAND
END IF
HELL:
COMMANDS$ = A$
IF COMMANDS$ = CHR$(9) THEN
 PRINT "WAITING"
 FOR TM = 1 TO 4000 * MDELAY: NEXT
 NEXTTRN = 1
ELSEIF COMMANDS$ = "S" THEN
 PRINT "SHIELDS"
 FOR TM = 1 TO 4000 * MDELAY: NEXT
 SHIELDSC = 1: CALL SHIELDSSUB
ELSEIF COMMANDS$ = "T" THEN
 PRINT "TORPEDOES"
 FOR TM = 1 TO 4000 * MDELAY: NEXT
 CALL TORPEDOESSUB
ELSEIF COMMANDS$ = "P" THEN
 PRINT "PHASERS"
 FOR TM = 1 TO 4000 * MDELAY: NEXT
 CALL PHASERSSUB
ELSEIF COMMANDS$ = "W" THEN
 PRINT "WARP DRIVE"
 'FOR TM = 1 TO 4000 * MDELAY: NEXT
 CALL DRIVESUB
ELSEIF COMMANDS$ = "I" THEN
 PRINT "IMPULSE"
 FOR TM = 1 TO 4000 * MDELAY: NEXT
 CALL IMPULSESUB
ELSEIF COMMANDS$ = "E" THEN
 PRINT "ENERGY"
 FOR TM = 1 TO 4000 * MDELAY: NEXT
 CALL ENERGYSUB
ELSEIF COMMANDS$ = "L" THEN
 PRINT "LR SENSORS"
 FOR TM = 1 TO 4000 * MDELAY: NEXT
 CALL SENSORSSUB
ELSEIF COMMANDS$ = "D" THEN
 PRINT "DISRUPTORS"
 FOR TM = 1 TO 4000 * MDELAY: NEXT
 CALL PHASERSSUB
ELSEIF COMMANDS$ = "B" THEN
 PRINT "BLASTERS"
 FOR TM = 1 TO 4000 * MDELAY: NEXT
 CALL PHASERSSUB
ELSEIF COMMANDS$ = "R" THEN
 PRINT "RECON PROBE"
 FOR TM = 1 TO 4000 * MDELAY: NEXT
 CALL PROBESUB
END IF
ENDCOMMANDS:
END SUB

SUB DAMAGESUB

J99 = INT(DAMAGE / 15)
IF J99 < 0 THEN J99 = 0
IF SYSDMG >= J99 THEN GOTO ENDDAMAGE
DO
NEWDMG:
 NEW = 0: TT = 0
 A = INT(RND(1) * 6) + 1
 IF A = 1 AND PDMG = 1 THEN NEW = 1
 IF A = 2 AND TDMG = 1 THEN NEW = 1
 IF A = 3 AND SDMG = 1 THEN NEW = 1
 IF A = 4 AND WDMG = 1 THEN NEW = 1
 IF A = 5 AND IDMG = 1 THEN NEW = 1
 IF A = 6 AND LDMG = 1 THEN NEW = 1
 IF NEW = 1 THEN GOTO NEWDMG
 TT = 1
 IF A = 1 THEN
  PDMG = 1: A$ = "PHASERS"
 END IF
 IF A = 2 THEN TDMG = 1: A$ = "TORPEDOES"
 IF A = 3 THEN SDMG = 1: A$ = "SHIELDS"
 IF A = 4 THEN WDMG = 1: A$ = "WARP DRIVE"
 IF A = 5 THEN IDMG = 1: A$ = "IMPULSE"
 IF A = 6 THEN LDMG = 1: A$ = "LR SENSORS"
 SYSDMG = SYSDMG + 1
 LOCATE 12, 2: PRINT SPACE$(22)
 COLOR 15
 LOCATE 12, 2: PRINT A$; " DAMAGED!"
FOR TM = 1 TO 6000 * MDELAY: NEXT
J99 = INT(DAMAGE / 15)
IF J99 < 0 THEN J99 = 0
LOOP WHILE SYSDMG < J99
ENDDAMAGE:
END SUB

SUB DELAYSUB
LOCATE 12, 2: PRINT SPACE$(22)
COLOR 7
LOCATE 12, 2
PRINT "SOUND SPEED ("; : COLOR 15: PRINT "1"; : COLOR 7: PRINT "-"; : COLOR 15
PRINT "8"; : COLOR 7: PRINT ")"; : COLOR 14: PRINT SDELAY / .5
PRINT
DO
A$ = INKEY$
LOOP UNTIL A$ >= "1" AND A$ <= "8"
LOCATE 12, 2: PRINT SPACE$(22)
COLOR 7
LOCATE 12, 2
PRINT "WEAPON SPEED ("; : COLOR 15: PRINT "1"; : COLOR 7: PRINT "-"; : COLOR 15
PRINT "4"; : COLOR 7: PRINT ")"; : COLOR 14: PRINT WDELAY / .5
PRINT
DO
C$ = INKEY$
LOOP UNTIL C$ >= "1" AND C$ <= "4"
LOCATE 12, 2: PRINT SPACE$(22)
COLOR 7
LOCATE 12, 2
PRINT "MESSAGE DELAY ("; : COLOR 15: PRINT "1"; : COLOR 7: PRINT "-"; : COLOR 15
PRINT "4"; : COLOR 7: PRINT ")"; : COLOR 14: PRINT MDELAY / .5
PRINT
DO
B$ = INKEY$
LOOP UNTIL B$ >= "1" AND B$ <= "4"
SDELAY = VAL(A$) * .5
MDELAY = VAL(B$) * .5
WDELAY = VAL(C$) * .5
END SUB

SUB DISPLAY
STATUS:
'STATUS

A = 3: B = 15: C = 14: D = 11

'--SHIELDS--
IF SDMG = 1 THEN A = 4: D = 14 ELSE A = 7: D = 15
LOCATE C, 2: COLOR D: PRINT "S"; : COLOR A: PRINT "HIELDS:";
B = 2
IF SHIELDS <= CINT((1000) * .51) THEN B = 14
IF SHIELDS <= CINT((1000) * .25) THEN B = 4
COLOR B: PRINT STR$(SHIELDS); : COLOR A: C = C + 1
IF SYSTEMS(1) = 1 THEN
 IF SHIELDS < 1000 THEN COLOR 9 ELSE COLOR 10
 PRINT " *  "
 ELSE
 PRINT "    "
END IF

'--SENSORS--
IF LDMG = 1 THEN A = 4: D = 14 ELSE A = 7: D = 15
LOCATE C, 2: COLOR D: PRINT "L"; : COLOR A: PRINT "R SENSORS:";
B = 2
IF SENSORS <= 250 THEN B = 14
IF SENSORS <= 125 THEN B = 4
COLOR B: PRINT STR$(SENSORS); : COLOR A: C = C + 1
IF SYSTEMS(2) = 1 THEN
 IF SENSORS < 500 THEN COLOR 9 ELSE COLOR 10
 PRINT " *  "
 ELSE
 PRINT "    "
END IF

'--PHASERS--
IF PDMG = 1 THEN A = 4: D = 14 ELSE A = 7: D = 15
IF fleet$ = "F" THEN
 LOCATE C, 2: COLOR D: PRINT "P"; : COLOR A: PRINT "HASERS:";
ELSEIF fleet$ <> "F" THEN
 LOCATE C, 2: COLOR D: PRINT "D"; : COLOR A: PRINT "ISRUPTOR:";
END IF
B = 2
IF PHASERS <= CINT((1000) * .51) THEN B = 14
IF PHASERS <= CINT((1000) * .25) THEN B = 4
COLOR B: PRINT STR$(PHASERS); : COLOR A: C = C + 1
IF SYSTEMS(3) = 1 THEN
 IF PHASERS < 1000 THEN COLOR 9 ELSE COLOR 10
 PRINT " *  "
 ELSE
 PRINT "    "
END IF

'--IMPULSE--
IF IDMG = 1 THEN A = 4: D = 14 ELSE A = 7: D = 15
LOCATE C, 2: COLOR D: PRINT "I"; : COLOR A: PRINT "MPULSE:";
B = 2
IF IMPULSE <= 250 THEN B = 14
IF IMPULSE <= 125 THEN B = 4
COLOR B: PRINT STR$(IMPULSE); : COLOR A: C = C + 1
IF SYSTEMS(4) = 1 THEN
 IF IMPULSE < 500 THEN COLOR 9 ELSE COLOR 10
 PRINT " *  "
 ELSE
 PRINT "    "
END IF

'--WARP DRIVE--
IF WDMG = 1 THEN A = 4: D = 14 ELSE A = 7: D = 15
LOCATE C, 2: COLOR D: PRINT "W"; : COLOR A: PRINT "ARP DRIVE:";
B = 2
IF DRIVE <= 500 THEN B = 14
IF DRIVE <= 250 THEN B = 4
COLOR B: PRINT STR$(DRIVE); : COLOR A: C = C + 1
IF SYSTEMS(5) = 1 THEN
 IF DRIVE < 1000 THEN COLOR 9 ELSE COLOR 10
 PRINT " *  "
 ELSE
 PRINT "    "
END IF
                                          
'--TORPEDOES--
IF TDMG = 1 THEN A = 4: D = 14 ELSE A = 7: D = 15
LOCATE C, 2: COLOR D: PRINT "T"; : COLOR A: PRINT "ORPEDOES:";
B = 2
IF TORPEDOES <= CINT((20) * .51) THEN B = 14
IF TORPEDOES <= CINT((20) * .25) THEN B = 4
COLOR B: PRINT STR$(TORPEDOES); "  ": COLOR A: C = C + 1

'--ENERGY--
IF ENERGY < 2 THEN ENERGY = 0
D = 15: A = 7
IF ENERGY = 0 THEN D = 14: A = 4
LOCATE C, 2: COLOR D: PRINT "E"; : COLOR A: PRINT "NERGY:";
B = 2
IF ENERGY <= CINT((5000) * .51) THEN B = 14
IF ENERGY <= CINT((5000) * .25) THEN B = 4
COLOR B: PRINT STR$(ENERGY); "   ": COLOR A: C = C + 1

'--DAMAGE--
LOCATE C, 2: COLOR 7: PRINT "DAMAGE:";
B = 2
IF DAMAGE >= 50 THEN B = 14
IF DAMAGE >= 75 THEN B = 4
COLOR B: PRINT STR$(DAMAGE); "% "

'--PROBES--
LOCATE C, 14
COLOR 7: PRINT "PROBES:";
B = 2
IF PROBE = 0 THEN B = 4
COLOR B: PRINT STR$(PROBE)
C = C + 1

'--STARDATES--
A = 3
B = 2
IF STRDT <= CINT(LSTRDT * .51) THEN B = 14
IF STRDT <= CINT(LSTRDT * .25) THEN B = 4
LOCATE C, 2: COLOR 7: PRINT "DATE:";
IF STRDT < 0 THEN STRDT = 0
COLOR B: PRINT CINT(STRDT) / 10; "  "

'--STARSHIPS--
A = 3
LOCATE C, 14: COLOR 7: PRINT "SHIPS:";
DT = STRDT / 10: OL = STARSHIPS - KDSTRYD
COLOR 4
IF DT * 2 >= OL * .75 THEN COLOR 14
IF DT * 2 >= OL THEN COLOR 2
PRINT STR$(STARSHIPS - KDSTRYD); " "

'STARMAP

FOR Y = 0 TO 9
 LOCATE Y + 13, 27: COLOR 15: PRINT CHR$(48 + Y)
 FOR X = 0 TO 9
 LOCATE 12, X + 28: COLOR 15: PRINT CHR$(48 + X)
 LOCATE Y + 13, X + 28
 YY = Y + 13: XX = X + 29
 A = SECTOR(X, Y)
 SR = 2: IF LDMG = 1 THEN SR = 1
 COLOR 7
 IF SECTORX = X AND SECTORY = Y THEN
  PRINT " ";
  X0 = XX - 1
  C0 = 1
  IF SHLDS$ = "Y" THEN C0 = 9
  IF A > 0 AND A < 9 THEN C0 = 14
  IF A = 9 THEN C0 = 2
  IF A = 11 THEN C0 = 5
  IF fleet$ = "F" THEN
   PSET (XX * 8 - 14, YY * 8 - 8), C0
   DRAW "S4 R2D1R1L4R1D1R2L1D4U1L2U1D3U2R4U1D3"
  ELSEIF fleet$ = "K" THEN
    PSET (XX * 8 - 14, YY * 8 - 8), C0
    DRAW "S4 R2D1L2R1D3L1R2D1R2L6D1R6D1U1L6D1"
  ELSEIF fleet$ = "R" THEN
    PSET (XX * 8 - 13, YY * 8 - 8), C0
    DRAW "S4 NR1D1LNR3DNR3RDNRDLNR3DLLUDDUR7UDDULLDNL3DNL3"
  ELSEIF fleet$ = "G" THEN
    PSET (XX * 8 - 14, YY * 8 - 8), C0
    DRAW "S4 NR2DLNR4DNR4DNR4DLNR6DNR6DNR6DRBR4R"
  END IF
  COLOR 7: GOTO NEXTSEC
 END IF

 PR = 0
 IF PROBE$ <> "NO" THEN
  FOR X1 = -1 TO 1: FOR Y1 = -1 TO 1
   IF X + X1 < 0 THEN GOTO NXT
   IF Y + Y1 < 0 THEN GOTO NXT
   IF PROBE(X + X1, Y + Y1) = 1 THEN PR = 1
NXT:
  NEXT Y1: NEXT X1
 END IF

 IF A < 9 THEN
  COLOR 8
  QX = ABS(SECTORX - X): QY = ABS(SECTORY - Y)
  IF QX > QY THEN QZ = QX ELSE QZ = QY
  IF (QZ <= SR AND SENSORS$ = "ON" AND A = 0) OR (PR = 1 AND A = 0) THEN
   COLOR 3
   IF QZ <= SR AND SENSORS$ = "ON" THEN COLOR 11
   PRINT CHR$(250);
  END IF
  IF (QZ > SR OR SENSORS$ = "OFF") AND PR = 0 THEN COLOR 8: PRINT CHR$(250);
 END IF
 IF A > 0 AND A < 9 THEN
  QX = ABS(SECTORX - X): QY = ABS(SECTORY - Y)
  IF QX > QY THEN QZ = QX ELSE QZ = QY
  IF (QZ <= SR AND SENSORS$ = "ON") OR PR = 1 THEN
   PRINT " ";
   IF A = 1 THEN C0 = 112
   IF A = 2 THEN C0 = 4
   IF A = 3 THEN C0 = 40
   IF ENEMY$ = "K" THEN
    PSET (XX * 8 - 14, YY * 8 - 8), C0
    DRAW "S4 R2D1L2R1D3L1R2D1R2L6D1R6D1U1L6D1"
   END IF
   IF ENEMY$ = "R" THEN
    PSET (XX * 8 - 13, YY * 8 - 8), C0
    DRAW "S4 NR1D1LNR3DNR3RDNRDLNR3DLLUDDUR7UDDULLDNL3DNL3"
   END IF
   IF ENEMY$ = "G" THEN
    PSET (XX * 8 - 14, YY * 8 - 8), C0
    DRAW "S4 NR2DLNR4DNR4DNR4DLNR6DNR6DNR6DRBR4R"
   END IF
   IF ENEMY$ = "F" THEN
    PSET (XX * 8 - 14, YY * 8 - 8), C0
    DRAW "S4 R2D1R1L4R1D1R2L1D4U1L2U1D3U2R4U1D3"
   END IF
  END IF
 END IF
 IF A = 9 OR A = 11 THEN
  PRINT " ";
  IF A = 9 THEN C0 = 2
  IF A = 11 THEN C0 = 5
  CIRCLE (XX * 8 - 13, YY * 8 - 5), 4, C0
  PAINT (XX * 8 - 13, YY * 8 - 5), C0, C0
 END IF
 COLOR 7
NEXTSEC:
NEXT: NEXT
CALL SHIELDSSUB
END SUB

SUB DOCKING
CALL DISPLAY
Z = SECTOR(SECTORX, SECTORY)
IF Z < 9 THEN GOTO DOCKEND
Z9 = 40: IF Z = 9 THEN Z9 = 48
ZL = 1: ZD = 9
PSET (155, 20), 0
DRAW "S16 BD3L3R9 BG1BL1L5 BG1R7 BD2L7 BF3R1"
PSET (155, 20), 8
DRAW "s16d1r3u1d1r1f1f1l1g1f1d1d1g1g1g1d1l1u1h3u2e1h1l1e2r1"
PAINT (157, 34), ZL, 8
PSET (155, 20), 8
DRAW "S16 BD3L3R9 BG1BL1L5 BG1R7 BD2L7 BF3R1"
PSET (155, 20), 8
PSET (155, 20), Z9: PSET (167, 20), Z9: PSET (161, 65), Z9
PAINT (157, 34), ZD, 8
PAINT (157, 38), ZD, 8
PAINT (157, 50), ZD, 8
IF Z = 11 THEN GOTO DOCKEND
FOR TM = 1 TO 8000 * MDELAY: NEXT
IF SHLDS$ = "Y" THEN SHIELDSC = 1: CALL SHIELDSSUB
CALL STATS
LOCATE 12, 2: PRINT SPACE$(22)
LOCATE 12, 2: COLOR 15: PRINT "DOCKING"

FOR SND = 1 TO 5
FOR SS = 200 TO 250 STEP 1 * SDELAY
SOUND SS, .2
NEXT SS
NEXT SND

FOR TM = 1 TO 10000 * MDELAY: NEXT
LOCATE 12, 2: PRINT "ENERGY RESUPPLIED"

 SA = 500: SB = 750
 FOR SND = 1 TO 100
 FOR SS = SA TO SB STEP 50 * SDELAY
 SOUND SS, .1
 NEXT SS
 SA = SA + 2: SB = SB + 2
 NEXT SND


STRDT = STRDT - 4
FOR TM = 1 TO 10000 * MDELAY: NEXT
IF SYSDMG > 0 THEN
 LOCATE 12, 2: PRINT "REPAIRS COMPLETED"
 STRDT = STRDT - SYSDMG * 1
 FOR SND = 1 TO 5
 FOR SS = 150 TO 100 STEP -1 * SDELAY
 SOUND SS, .2
 NEXT SS
 NEXT SND
 FOR TM = 1 TO 10000 * MDELAY: NEXT
 SYSDMG = 0: PDMG = 0: WDMG = 0: SDMG = 0: IDMG = 0: TDMG = 0: LDMG = 0
END IF
SECTOR(SECTORX, SECTORY) = 11
DOCKEND:
END SUB

SUB DRIVESUB

SX = SECTORX: SY = SECTORY
NEWSECTOR:
LOCATE 12, 2: PRINT SPACE$(22)
COLOR 7: LOCATE 12, 2: PRINT "ENTER SECTOR: ": COLOR 15
DO
X$ = INKEY$
IF X$ = CHR$(8) THEN GOTO DSUBEND
LOOP WHILE X$ = "" OR X$ < "0" OR X$ > "9"
LOCATE 12, 16
PRINT CHR$(VAL(X$) + 48); : PRINT ","
DO
Y$ = INKEY$
IF Y$ = CHR$(8) THEN GOTO DSUBEND
LOOP WHILE Y$ = "" OR Y$ < "0" OR Y$ > "9"
LOCATE 12, 18
PRINT CHR$(VAL(Y$) + 48)
SX1 = VAL(X$): SY1 = VAL(Y$)
FOR TM = 1 TO 6000 * MDELAY: NEXT
MOVEMENT = 0
IF SX = SX1 AND SY = SY1 THEN GOTO DSUBEND
IF SX <> SX1 OR SY <> SY1 THEN
 MX = ABS(SX - SX1): MY = ABS(SY - SY1)
 IF MX > MY THEN MOVE = MX ELSE MOVE = MY
 MOVEMENT = MOVE: MOVE = MOVE * 200
 IF SHLDS$ = "Y" THEN MOVE = MOVE * 1.25
 IF WDMG = 1 THEN MOVE = CINT(MOVE * 2)
 IF MOVE > DRIVE THEN
  LOCATE 12, 2: PRINT SPACE$(22)
  LOCATE 12, 2: COLOR 15: PRINT "NOT ENOUGH ENERGY!"
 FOR TM = 1 TO 4000 * MDELAY: NEXT
  MOVEMENT = 0
  GOTO DSUBEND
 END IF
 RETREAT = 0
 IF SECTOR(SX, SY) > 0 AND SECTOR(SX, SY) < 4 THEN
  RETREAT = 1
  CALL ENEMYFIRESUB
 END IF
 SECTORY = VAL(Y$): SECTORX = VAL(X$)
 DRIVE = DRIVE - MOVE
 IF DRIVE <= 0 THEN DRIVE = 0
 FOR A = 1 TO 3
  KX(A) = 0: KY(A) = 0: KR(A) = 0
 NEXT A
 LOCATE 12, 2: PRINT SPACE$(22)
 LOCATE 12, 2: COLOR 15: PRINT "ENGAGING WARP DRIVE!"
 FOR Q = 1 TO 100
  STX(Q) = 0: STC(Q) = 0: STY(Q) = 0
 NEXT Q
 FOR A = 1 TO 25: XX(A) = 0: NEXT A

 SA = 37: SB = 150
 FOR SND = 1 TO 200
  FOR SS = SA TO SB STEP 50 * SDELAY
   SOUND SS, .1
  NEXT SS
   SA = SA + 2: SB = SB + 2
 NEXT SND
 LINE (5, 5)-(315, 83), 0, BF

 FOR Z = 1 TO 100
  FOR A = 1 TO 17 - SDELAY * 2
   IF XX(A) = 0 THEN
    XX(A) = 155: CL(A) = INT(RND(1) * 15) + 17
    YY(A) = 45
    DX(A) = INT(RND(1) * 26)
    DY(A) = 25 - DX(A)
    X = INT(RND(1) * 2) + 1: Y = INT(RND(1) * 2) + 1
    IF X = 1 THEN DX(A) = DX(A) - (DX(A) * 2)
    IF Y = 1 THEN DY(A) = DY(A) - (DY(A) * 2)
    DX(A) = DX(A) * 2: DY(A) = DY(A) * 1
    YY(A) = YY(A) + DY(A) / 2: XX(A) = XX(A) + DX(A) / 2
   END IF
   LINE (XX(A), YY(A))-(XX(A) - DX(A), YY(A) - DY(A)), 0
   YY(A) = YY(A) + DY(A) / 2: XX(A) = XX(A) + DX(A) / 2
   IF YY(A) < 5 OR XX(A) > 315 OR XX(A) < 5 OR YY(A) > 83 THEN
    XX(A) = 0
    GOTO nextstar
   END IF
   LINE (XX(A), YY(A))-(XX(A) - DX(A), YY(A) - DY(A)), CL(A)
   'SLEEP 1
nextstar:
  NEXT A
 NEXT Z

'CLEAR STARS

 LINE (5, 5)-(315, 83), 0, BF
 CALL STARSSUB
 NUMBER = SECTOR(SECTORX, SECTORY)
 SBX = 0: SBY = 0
 SENSORS$ = "OFF"
 CALL DISPLAY
 IF NUMBER >= 9 THEN
  NUMBER = 0
  CALL DOCKING
 END IF
 IF NUMBER <> 0 THEN
  CALL OMEGANSSUB
   LOCATE 12, 2: PRINT SPACE$(22)
   COLOR 15: LOCATE 12, 2
   PRINT EN$; "S ATTACKING!"
  CALL ALARM
  FOR TM = 1 TO 4000 * MDELAY: NEXT
 END IF
END IF

'NEXT DATE

IF MOVEMENT = 0 THEN NEXTTRN = 0 ELSE NEXTTRN = 2
IF NEXTTRN = 2 THEN CALL PROBECLEAR
IF NEXTTRN = 2 AND NUMBER > 0 THEN
 EF = MOVEMENT
 IF NUMBER <> 0 THEN
  FOR G = 1 TO NUMBER
   IF INT(RND(1) * 100) + 1 > 50 THEN
    IF EF = MOVEMENT THEN
     STRDT = STRDT - (MOVEMENT - 1)
     CALL ENERGYSUB
     FOR T9 = 1 TO DATE
      CALL KREPAIRS: CALL SREPAIRS: CALL KLMOVE
     NEXT T9
     EF = 1
    END IF
    ARRIVING(G) = 1
    CALL ENEMYFIRESUB
    ARRIVING(G) = 0
   END IF
  NEXT G
 END IF
 STRDT = STRDT - EF
 IF EF > 0 THEN
  CALL ENERGYSUB
  FOR O = 1 TO DATE
   CALL KREPAIRS: CALL SREPAIRS: CALL KLMOVE
  NEXT O
 END IF
 NEXTTRN = 0
END IF
IF NUMBER = 0 THEN STRDT = STRDT - MOVEMENT
DSUBEND:
IF STRDT < 1 THEN CALL WINGAME
END SUB

SUB ENEMYFIRESUB

K = 0
FOR J = 1 TO 3
 IF ARRIVING(J) = 1 THEN K = J
NEXT J
IF K > 0 THEN GOTO ARVFIRE
FOR K = 1 TO 3
ARVFIRE:
 KT = KTYPE(KN(K))
 P99 = 0
 KMOVE(K) = 0: DM1 = 0
 IF KX(K) = 0 OR EVADING(K) = 0 THEN LEAVING(K) = 0
 IF LEAVING(K) = 1 THEN LEAVING(K) = 2: GOTO NEXTKL
 IF KX(K) = 0 THEN GOTO NEXTKL
 Z1 = KSHLD(KN(K)): Z2 = KDMG(KN(K))
 Z3 = Z1
 IF Z2 >= CINT(Z1 * .51) THEN Z3 = CINT(Z1 * .51)
 'MOVE OR FIRE
 R = INT(RND(1) * 100) + 1
 IF Z2 >= CINT(Z1 * .51) THEN DM1 = 1
 IF Z2 >= CINT(Z1 * .75) THEN DM1 = 2
 IF DM1 = 2 AND KR(K) < 3 THEN KMOVE(K) = 2
 IF DM1 = 0 AND R <= 60 AND KR(K) > 1 THEN KMOVE(K) = 1
 IF DM1 = 1 AND R <= 60 AND KR(K) < 3 THEN KMOVE(K) = 2
 'LEAVING
 IF DM1 = 2 AND LEAVING(K) = 0 THEN
  Q = INT(RND(1) * 100) + 1
  IF Q <= KR(K) * 20 THEN
   KMOVE(K) = 1: LEAVING(K) = 1
   EVADING(K) = 1
   LOCATE 12, 2: PRINT SPACE$(22)
   COLOR 7: LOCATE 12, 2
   PRINT EN$; : COLOR 15: PRINT K; : COLOR 7: PRINT "LEAVING!"
   CALL SHIPSSUB
   FOR TM = 1 TO 6000 * MDELAY: NEXT
   GOSUB FIRING
   GOTO NEXTKL
  END IF
 END IF
 IF RETREAT = 1 AND LEAVING(K) = 0 AND EVADING(K) = 0 AND KR(K) > 1 THEN KMOVE(K) = 1
 IF KMOVE(K) = 1 THEN GOSUB MOVING: GOSUB FIRING
 IF KMOVE(K) = 0 THEN GOSUB FIRING
 IF KMOVE(K) = 2 THEN GOSUB FIRING: GOSUB MOVING
NEXTKL:
IF ARRIVING(K) = 1 THEN GOTO EFEND
NEXT K
GOTO EFEND

FIRING:
 IF KR(K) = 1 THEN KF = 25
 IF KR(K) = 2 THEN KF = 50
 IF KR(K) = 3 THEN KF = 75
 G = INT(RND(1) * 100) + 1: TORP = 0
 ZZY = KT
 IF ZZY > 4 THEN
  IF ZZY = 5 THEN ZZY = 2
  IF ZZY = 6 THEN ZZY = 2
  IF ZZY = 7 THEN ZZY = 1
  IF ZZY = 8 THEN ZZY = 1
  IF ZZY = 9 OR ZZY = 13 THEN ZZY = 4
  IF ZZY = 10 OR ZZY = 14 THEN ZZY = 3
  IF ZZY = 11 OR ZZY = 15 THEN ZZY = 2
  IF ZZY = 12 OR ZZY = 16 THEN ZZY = 1
 END IF
 IF DM1 > 0 THEN ZZY = CINT(ZZY * .51)
 IF DM1 > 0 AND ENEMY$ = "R" AND ZZY = 1 THEN ZZY = 0: G = 150
 IF G > KF THEN
  LOCATE 12, 2: PRINT SPACE$(22)
  LOCATE 12, 2: COLOR 7
  PRINT EN$; : COLOR 15: PRINT K; : COLOR 7: PRINT "FIRING!"
  GOTO DAMAGECALC
 END IF

'PHOTON TORPEDO

TORP = 1
ZZX = 0
DO
 LOCATE 12, 2: PRINT SPACE$(22)
 LOCATE 12, 2: COLOR 7
 PRINT EN$; : COLOR 15: PRINT K; : COLOR 7: PRINT "FIRING!"
 ZZX = ZZX + 1
 'LOCATE 1, 1: PRINT ZZX, ZZY: DO: A$ = INKEY$: LOOP UNTIL A$ <> ""
 TX = KX(K): TY = KY(K)
 AA = 2000: BB = 37: CC = 100
 IF ENEMY$ = "R" THEN AA = 2500: BB = 537: CC = 100
 FOR SND = 1 TO CC
  FOR SS = AA TO BB STEP -100 * SDELAY
   SOUND SS, .05
  NEXT SS
  AA = AA - 100
 NEXT SND
 FG = 0: L9 = 0
 IF ENEMY$ = "K" OR ENEMY$ = "G" OR ENEMY$ = "F" THEN
 L5 = 1
 IF KT = 16 OR KT = 12 OR KT = 4 OR KT = 3 OR KT = 14 OR KT = 15 OR KT = 10 THEN L5 = 2
 IF KT = 2 OR KT = 1 THEN L5 = 3
 IF KT = 9 THEN L5 = 0
  FOR TF = TY * 8 - L5 TO 78 STEP 4
   FG = FG + 1: IF FG > 1 THEN FG = 0
   PSET (TX * 8 + 2, TF), 4
   DRAW "S4R1D2L1U1L1R3"
   PSET (TX * 8, TF - 1), 42 + FG
   DRAW "S4 F1 BR3E1G1 BD2F1H1 BL3G1"
   'SLEEP 5
   FOR TM = 1 TO 200 / WDELAY: NEXT
   PSET (TX * 8 + 2, TF), 0
   DRAW "S4R1D2L1U1L1R3"
   PSET (TX * 8, TF - 1), 0
   DRAW "S4 F1 BR3E1G1 BD2F1H1 BL3G1"
   IF L9 = 0 THEN CALL SHIPSSUB: L9 = 1
  NEXT TF

'PLASMA TORPEDO

 ELSEIF ENEMY$ = "R" THEN
  FOR TF = TY * 8 - 1 TO 78 STEP 4
   IF FG = 1 THEN FH = 4 ELSE FH = 12
   FG = FG + 1: IF FG > 1 THEN FG = 0
   PSET (TX * 8 + 2, TF), 43
   DRAW "S4NR1D1L1NR3R1D1R1"
   PSET (TX * 8, TF - 1), FH
   DRAW "S4 F1 BR3E1G1 BD2F1H1 BL3G1"
   FOR TM = 1 TO 250 / WDELAY: NEXT
   PSET (TX * 8 + 2, TF), 0
   DRAW "S4NR1D1L1NR3D1NR3R1D1R1"
   PSET (TX * 8, TF - 1), 0
   DRAW "S4 F1 BR3E1G1 BD2F1H1 BL3G1"
  NEXT TF
 END IF
 CALL STARSSUB
 H0 = 105: H1 = 10: IF ENEMY$ = "R" THEN H0 = 105: H1 = 15
 HIT = H0 - (KR(K) * H1)
 V = INT(RND(1) * 100) + 1
 Z3 = 0
 IF V <= HIT THEN Z3 = 250
 IF ENEMY$ = "R" AND V <= HIT THEN Z3 = 500

'DAMAGE CALCULATOR

DAMAGECALC:
 DSRPTR = Z3
 RNDN = DSRPTR: CALL RAND: DH = RNDM(3): DM = RNDM(2): DL = RNDM(1)
 IF KR(K) = 1 THEN HIT = DH
 IF KR(K) = 2 THEN HIT = DM
 IF KR(K) = 3 THEN HIT = DL
 IF TORP = 1 THEN HIT = DH
 DMG = INT(RND(1) * 100) + 1
 SH = SHIELDS - HIT
 S0 = 80
 IF SH < CINT((1000) * .51) THEN S0 = 60
 IF SH < CINT((1000) * .25) THEN S0 = 40
 IF SH < 1 THEN S0 = 0
 IF SDMG = 1 THEN S0 = CINT(S0 * .51)
 DD = 0
 IF DMG > S0 THEN
  DD = CINT(HIT * .2 / 10)
  IF SH < CINT((1000) * .51) THEN DD = CINT(HIT * .4 / 10)
  IF SH < CINT((1000) * .25) THEN DD = CINT(HIT * .6 / 10)
  IF SH < 1 THEN
   DD = CINT((HIT - SHIELDS) / 10)
   IF DMG > 40 THEN
    DD = DD + CINT(SHIELDS * .6 / 10)
   END IF
  END IF
 END IF
 IF Z3 = 0 THEN DD = 0: HIT = 0
 IF SHLDS$ = "N" THEN DD = CINT(HIT / 10)
 IF SHIELDS - HIT < 0 THEN HIT = SHIELDS
 IF SHLDS$ = "Y" THEN SHIELDS = SHIELDS - HIT
 IF SHIELDS < 0 THEN SHIELDS = 0
 DAMAGE = DAMAGE + DD

'PHASERS

IF (ENEMY$ = "R" AND TORP = 0) OR (ENEMY$ = "F" AND TORP = 0) THEN
 P99 = 1
 IF KT = 5 THEN Y0 = 2
 IF KT = 6 THEN Y0 = 3
 IF KT = 7 THEN Y0 = 3
 IF KT = 8 THEN Y0 = 3
 IF KT = 13 THEN Y0 = 4
 IF KT = 14 THEN Y0 = 4
 IF KT = 15 THEN Y0 = 4
 IF KT = 16 THEN Y0 = 4
 IF ENEMY$ = "R" THEN C9 = 42 ELSE C9 = 12
 LINE (KX(K) * 8 + 2, 74)-(KX(K) * 8 + 2, KY(K) * 8 - Y0), C9
 LINE (KX(K) * 8 + 3, 74)-(KX(K) * 8 + 3, KY(K) * 8 - Y0), C9
 IF DD > 0 AND Z3 > 0 THEN
  PSET (KX(K) * 8 - 1, 74), 14
  DRAW "s4r3d1r2u1r2d1r1d2l1d2r1d1l1d1l3u1l2d1l2u1l1u2r1u2l1u1r1u1bf3p14,14"
  OX = KX(K) * 8 - 2: OY = 74
  FOR OZ = 1 TO 20
P109:
   OOX = INT(RND(1) * 11): OOY = INT(RND(1) * 9)
   OOX = OOX + OX: OOY = OOY + OY
   IF POINT(OOX, OOY) <> 14 THEN GOTO P109
   PSET (OOX, OOY), 8
  NEXT OZ
 ELSE
 PSET (KX(K) * 8 - 1, 74), 48
 DRAW "s4r3d1r2u1r2d1r1d2l1d2r1d1l1d1l3u1l2d1l2u1l1u2r1u2l1u1r1u1bf3p48,48"
END IF

 C0 = 0
 FOR SND = 1 TO 40
 C0 = C0 + 1: IF C0 > 1 THEN C0 = 0
 IF C0 = 0 AND ENEMY$ = "R" THEN C1 = 42
 IF C0 = 1 AND ENEMY$ = "R" THEN C1 = 43
 IF C0 = 0 AND ENEMY$ = "F" THEN C1 = 4
 IF C0 = 1 AND ENEMY$ = "F" THEN C1 = 12
 LINE (KX(K) * 8 + 2, 74)-(KX(K) * 8 + 2, KY(K) * 8 - Y0), C1
 LINE (KX(K) * 8 + 3, 74)-(KX(K) * 8 + 3, KY(K) * 8 - Y0), C1
 IF ENEMY$ = "F" THEN H1 = 1000: H2 = 1200 ELSE H1 = 1100: H2 = 1300
 FOR SS = H1 TO H2 STEP 50
 SOUND SS, .1 / SDELAY
 NEXT SS
 NEXT SND
 'SLEEP 10
 LINE (KX(K) * 8 + 2, 74)-(KX(K) * 8 + 2, KY(K) * 8 - Y0), 0
 LINE (KX(K) * 8 + 3, 74)-(KX(K) * 8 + 3, KY(K) * 8 - Y0), 0
 PSET (KX(K) * 8 - 1, 74), 0
 DRAW "s4r3d1r2u1r2d1r1d2l1d2r1d1l1d1l3u1l2d1l2u1l1u2r1u2l1u1r1u1bf3p0,0"
 CALL SHIPSSUB
 CALL STARSSUB
END IF

'DISRUPTORS

 IF TORP = 0 AND ENEMY$ = "K" THEN
  TY = KY(K)
  AA = 2800: BB = 37
  FOR SND = 1 TO 15
   FOR SS = AA TO BB STEP -150 * SDELAY
    SOUND SS, .05
   NEXT SS
   AA = AA - 150
  NEXT SND

  IF KT = 4 THEN XL = 8: XR = 13
  IF KT = 3 THEN XL = 9: XR = 14
  IF KT = 2 THEN XL = 9: XR = 14
  IF KT = 1 THEN XL = 8: XR = 13
  XX = 5 / (78 - (KY(K) * 8)) * 5: X9 = 0: YY = 1
  C0 = POINT(KX(K) * 8 - XL, TY * 8 - YY)
  FG = 0
  FOR TF = TY * 8 - YY TO 78 STEP 5
   IF FG = 1 THEN FH = 42 ELSE FH = 43
   FG = FG + 1: IF FG > 1 THEN FG = 0
   PSET (KX(K) * 8 - XL, TF), 4
   DRAW "S2R1D2R2D4L4U4R2D2U4"
   PSET (KX(K) * 8 - XL, TF + 2), FH
   PSET (KX(K) * 8 + XR, TF), 4
   DRAW "S2R1D2R2D4L4U4R2D2U4"
   PSET (KX(K) * 8 + XR, TF + 2), FH
   'SLEEP 10
   FOR TM = 1 TO 200 / WDELAY: NEXT
   PSET (KX(K) * 8 - XL, TF), 0
   DRAW "S2R1D2R2D4L4U4R2D2U4"
   PSET (KX(K) * 8 + XR, TF), 0
   DRAW "S2R1D2R2D4L4U4R2D2U4"
   IF X9 = 0 THEN
    PSET (KX(K) * 8 - XL, TF), C0
    PSET (KX(K) * 8 + XR, TF), C0
    X9 = 1
   END IF
   XL = XL - XX: XR = XR - XX
  NEXT TF
  CALL STARSSUB
 END IF

'BLASTERS

 IF TORP = 0 AND ENEMY$ = "G" THEN
  TY = KY(K)
  AA = 3000: BB = 500
  FOR SND = 1 TO 35
   FOR SS = AA TO BB STEP -150 * SDELAY
    SOUND SS, .025
   NEXT SS
   AA = AA - 100
  NEXT SND

  IF KT = 9 THEN XL = 4: XR = 8: YY = 0
  IF KT = 10 THEN XL = 5: XR = 9: YY = 1
  IF KT = 11 THEN XL = 4: XR = 8: YY = 2
  IF KT = 12 THEN XL = 2: XR = 6: YY = 1
  XX = 5 / (78 - (KY(K) * 8)) * 5: X9 = 0
  C0 = POINT(KX(K) * 8 - XL, TY * 8 - YY)
  FG = 0
  FOR TF = TY * 8 - YY TO 78 STEP 5
   IF FG = 1 THEN FH = 4 ELSE FH = 12
   FG = FG + 1: IF FG > 1 THEN FG = 0
   PSET (KX(K) * 8 - XL, TF), FH
   DRAW "ND4RD4"
   PSET (KX(K) * 8 + XR, TF), FH
   DRAW "ND4RD4"
   FOR TM = 1 TO 200 / WDELAY: NEXT
   'SLEEP 5
   PSET (KX(K) * 8 - XL, TF), 0
   DRAW "ND4RD4"
   PSET (KX(K) * 8 + XR, TF), 0
   DRAW "ND4RD4"
   IF X9 = 0 THEN
    CALL SHIPSSUB
    X9 = 1
   END IF
   XL = XL - XX: XR = XR - XX
  NEXT TF
  CALL STARSSUB
 END IF

'EXPLOSION

 IF P99 = 0 THEN
  IF DD > 0 THEN
    PSET (KX(K) * 8, 74), 14
    DRAW "s4r3d1r2u1r2d1r1d2l1d2r1d1l1d1l3u1l2d1l2u1l1u2r1u2l1u1r1u1bf3p14,14"
   ELSEIF TORP = 0 OR Z3 <> 0 THEN
    PSET (KX(K) * 8, 74), 48
    DRAW "s4r3d1r2u1r2d1r1d2l1d2r1d1l1d1l3u1l2d1l2u1l1u2r1u2l1u1r1u1bf3p48,48"
  END IF
 END IF
 IF DD > 0 AND P99 = 0 THEN
   OX = KX(K) * 8 - 2: OY = 74
   FOR OZ = 1 TO 20
P101:
   OOX = INT(RND(1) * 11): OOY = INT(RND(1) * 9)
   OOX = OOX + OX: OOY = OOY + OY
   IF POINT(OOX, OOY) <> 14 THEN GOTO P101
   PSET (OOX, OOY), 8
   NEXT OZ
 END IF
 CALL STARSSUB
                    
 IF DAMAGE >= 100 THEN CALL SHIPDESTROYED
 NN = 0
 IF Z3 > 0 THEN NN = 300: N1 = 500
 IF Z3 > 0 AND DD > 0 THEN NN = 500: N1 = 750
 IF P99 = 1 THEN NN = 0
 IF NN > 0 THEN
  FOR ZZ = 1 TO N1 / SDELAY
   SND = INT(RND(1) * NN) + 37
   SOUND SND, .025 * SDELAY
  NEXT ZZ
 END IF
 IF P99 = 0 THEN
  PSET (KX(K) * 8, 74), 0
  DRAW "s4r3d1r2u1r2d1r1d2l1d2r1d1l1d1l3u1l2d1l2u1l1u2r1u2l1u1r1u1bf3p0,0"
 END IF
 CALL STARSSUB

 IF SHLDS$ = "Y" AND Z3 > 0 THEN
  LOCATE 12, 2: PRINT SPACE$(22)
  LOCATE 12, 2: COLOR 7: PRINT "SHIELDS HIT:"; : COLOR 15: PRINT STR$(HIT)
  FOR TM = 1 TO 6000 * MDELAY: NEXT
 END IF
 IF DD > 0 THEN
  LOCATE 12, 2: PRINT SPACE$(22)
  LOCATE 12, 2: COLOR 7: PRINT "SHIP DAMAGE:"; : COLOR 15: PRINT STR$(DD); "%"
  FOR TM = 1 TO 6000 * MDELAY: NEXT
 END IF
 J99 = INT(DAMAGE / 15)
 IF SYSDMG < J99 AND J99 > 0 THEN CALL DAMAGESUB
 CALL DISPLAY
 IF TORP = 0 THEN ZZX = ZZY
LOOP UNTIL ZZX >= ZZY
RETURN

NEXTFIRE:
MOVING:
 IF KMOVE(K) = 0 THEN GOTO NEXTKL
 IF DM1 > 0 THEN
  KR(K) = KR(K) + 1
  K$ = "EVADING!"
  EVADING(K) = 1
 END IF
 IF DM1 = 0 THEN
  KR(K) = KR(K) - 1
  K$ = "CLOSING!"
  EVADING(K) = 0
  LEAVING(K) = 0
 END IF
 LOCATE 12, 2: PRINT SPACE$(22): LOCATE 12, 2
 COLOR 7: PRINT EN$; : COLOR 15: PRINT K; : COLOR 7: PRINT ; K$
 FOR TM = 1 TO 6000 * MDELAY: NEXT
 CALL SHIPSSUB
RETURN
EFEND:
END SUB

SUB ENERGYSUB
ENERGYSTART:
IF COMMANDS$ = "E" THEN
 LOCATE 12, 2: PRINT SPACE$(22)
 COLOR 7: LOCATE 12, 2
 PRINT "SYSTEM: "; : COLOR 15
 A$ = "": B$ = ""
 DO
  A$ = INKEY$
  A$ = UCASE$(A$)
  IF A$ = "O" THEN
   B$ = "O": PRINT "ONLY"
   FOR TM = 1 TO 4000 * MDELAY: NEXT
   LOCATE 12, 10
  END IF
 LOOP WHILE A$ <> "S" AND A$ <> "P" AND A$ <> "W" AND A$ <> "I" AND A$ <> "N" AND A$ <> "A" AND A$ <> CHR$(8) AND A$ <> "L" AND A$ <> "D" AND A$ <> "B"
 IF A$ = CHR$(8) THEN
  GOTO ENERGYEND
 END IF
 IF B$ = "O" THEN
   FOR A = 1 TO 5: SYSTEMS(A) = 0: NEXT
 END IF
 IF A$ = "S" THEN
  IF SYSTEMS(1) = 0 THEN SYSTEMS(1) = 1 ELSE SYSTEMS(1) = 0
  PRINT "SHIELDS"
 ELSEIF A$ = "L" THEN
  IF SYSTEMS(2) = 0 THEN SYSTEMS(2) = 1 ELSE SYSTEMS(2) = 0
  PRINT "LR SENSORS"
 ELSEIF A$ = "P" OR A$ = "D" OR A$ = "B" THEN
  IF SYSTEMS(3) = 0 THEN SYSTEMS(3) = 1 ELSE SYSTEMS(3) = 0
  IF fleet$ = "F" THEN PRINT "PHASERS"
 ELSEIF A$ = "I" THEN
  IF SYSTEMS(4) = 0 THEN SYSTEMS(4) = 1 ELSE SYSTEMS(4) = 0
  PRINT "IMPULSE"
 ELSEIF A$ = "W" THEN
  IF SYSTEMS(5) = 0 THEN SYSTEMS(5) = 1 ELSE SYSTEMS(5) = 0
  PRINT "WARP DRIVE"
 ELSEIF A$ = "N" THEN
 FOR A = 1 TO 5: SYSTEMS(A) = 0: NEXT A
 PRINT "NONE"
 ELSEIF A$ = "A" THEN
 FOR A = 1 TO 5: SYSTEMS(A) = 1: NEXT A
 PRINT "ALL SYSTEMS"
 END IF
 'FOR TM = 1 TO 4000 * MDELAY: NEXT
 GOTO ENERGYEND
END IF

'RECHARGING

DATEOLD = DATENEW: DATENEW = STRDT: DATE = ABS(DATEOLD - DATENEW)
LOCATE 12, 2: PRINT SPACE$(22);
COLOR 15
LOCATE 12, 2
PRINT "RECHARGING"
FOR R0 = 1 TO DATE
 B = 0
 IF SYSTEMS(1) = 1 AND SHIELDS < 1000 THEN B = B + 1
 IF SYSTEMS(2) = 1 AND SENSORS < 500 THEN B = B + 1
 IF SYSTEMS(3) = 1 AND PHASERS < 1000 THEN B = B + 1
 IF SYSTEMS(4) = 1 AND IMPULSE < 500 THEN B = B + 1
 IF SYSTEMS(5) = 1 AND DRIVE < 1000 THEN B = B + 1
 EE = 100: IF B = 0 THEN EE = 250
 ENERGY = ENERGY + EE
 IF ENERGY >= 5000 THEN ENERGY = 5000
 RE = 0
 IF B > 0 THEN
  RE = 300 - (B * 50)
  IF RE * B > ENERGY THEN RE = CINT(ENERGY / B + .01)
 END IF
 IF SHIELDS < 1000 AND SYSTEMS(1) = 1 THEN
  IF SHIELDS <= 0 THEN SHIELDS = 0
  AMT = RE
  IF AMT + SHIELDS > 1000 THEN AMT = 1000 - SHIELDS
  IF AMT > ENERGY THEN AMT = ENERGY
  SHIELDS = SHIELDS + AMT
  ENERGY = ENERGY - AMT
 END IF
 IF SENSORS < 500 AND SYSTEMS(2) = 1 THEN
  IF SENSORS <= 0 THEN SENSORS = 0
  AMT = RE
  IF AMT + SENSORS > 500 THEN AMT = 500 - SENSORS
  IF AMT > ENERGY THEN AMT = ENERGY
  SENSORS = SENSORS + AMT
  ENERGY = ENERGY - AMT
 END IF
 IF PHASERS < 1000 AND SYSTEMS(3) = 1 THEN
  IF PHASERS <= 0 THEN PHASERS = 0
  AMT = RE
  IF AMT + PHASERS > 1000 THEN AMT = 1000 - PHASERS
  IF AMT > ENERGY THEN AMT = ENERGY
  PHASERS = PHASERS + AMT
  ENERGY = ENERGY - AMT
 END IF
 IF IMPULSE < 500 AND SYSTEMS(4) = 1 THEN
  IF IMPULSE <= 0 THEN IMPULSE = 0
  AMT = RE
  IF AMT + IMPULSE > 500 THEN AMT = 500 - IMPULSE
  IF AMT > ENERGY THEN AMT = ENERGY
  IMPULSE = IMPULSE + AMT
  ENERGY = ENERGY - AMT
 END IF
 IF DRIVE < 1000 AND SYSTEMS(5) = 1 THEN
  IF DRIVE <= 0 THEN DRIVE = 0
  AMT = RE
  IF AMT + DRIVE > 1000 THEN AMT = 1000 - DRIVE
  IF AMT > ENERGY THEN AMT = ENERGY
  DRIVE = DRIVE + AMT
  ENERGY = ENERGY - AMT
  IF DRIVE <= 0 THEN DRIVE = 0
 END IF
NEXT R0
FOR TM = 1 TO 6000 * MDELAY: NEXT
CALL DISPLAY
ENERGYEND:
END SUB

SUB FLEETSUB
SCREEN 13: WIDTH 40, 25
CHSHIP:
LOCATE 1, 1
COLOR 5
PRINT "CHOOSE YOUR "; : COLOR 40: PRINT "FLEET "; : COLOR 5: PRINT "AND "; : COLOR 111: PRINT "ENEMY"
PRINT : PRINT
COLOR 13: PRINT "1"; : COLOR 5
IF A$ = "1" THEN COLOR 40
IF E$ = "1" THEN COLOR 111
PRINT "-KLINGON"
PRINT
COLOR 13: PRINT "2"; : COLOR 5
IF E$ = "2" THEN COLOR 111
IF A$ = "2" THEN COLOR 40
PRINT "-ROMULAN"
PRINT
COLOR 13: PRINT "3"; : COLOR 5
IF E$ = "3" THEN COLOR 111
IF A$ = "3" THEN COLOR 40
PRINT "-GORN"
PRINT
COLOR 13: PRINT "4"; : COLOR 5
IF E$ = "4" THEN COLOR 111
IF A$ = "4" THEN COLOR 40
PRINT "-FEDERATION"
PRINT : PRINT
IF A$ <> "" THEN GOTO GETBADSHIP2
GETSHIP:
A$ = INKEY$
IF A$ = "" THEN GOTO GETSHIP
IF A$ = "1" THEN fleet$ = "K": F$ = "KLINGON": GOTO CHSHIP
IF A$ = "2" THEN fleet$ = "R": F$ = "ROMULAN": GOTO CHSHIP
IF A$ = "3" THEN fleet$ = "G": F$ = "GORN": GOTO CHSHIP
IF A$ = "4" THEN fleet$ = "F": F$ = "FEDERATION": GOTO CHSHIP
GOTO GETSHIP
GETBADSHIP2:
IF ENEMY$ <> "" THEN GOTO DONESHIP
E$ = INKEY$
IF E$ = "" THEN GOTO GETBADSHIP2
IF E$ = A$ THEN GOTO GETBADSHIP2
ENEMY$ = ""
IF E$ = "1" THEN ENEMY$ = "KLINGON": GOTO CHSHIP
IF E$ = "2" THEN ENEMY$ = "ROMULAN": GOTO CHSHIP
IF E$ = "3" THEN ENEMY$ = "GORN": GOTO CHSHIP
IF E$ = "4" THEN ENEMY$ = "FEDERATION": GOTO CHSHIP
GOTO GETBADSHIP2
DONESHIP:
COLOR 5
PRINT : PRINT "HIT ANY KEY"
DO
A$ = INKEY$
LOOP UNTIL A$ <> ""
CLS
COLOR 5
PRINT "CHOOSE YOUR SHIP CLASS"
PRINT
PRINT
COLOR 13: PRINT "1"; : COLOR 5: PRINT "-DREADNOUGHT": PRINT
COLOR 13: PRINT "2"; : COLOR 5: PRINT "-CRUISER": PRINT
COLOR 13: PRINT "3"; : COLOR 5: PRINT "-DESTROYER": PRINT
COLOR 13: PRINT "4"; : COLOR 5: PRINT "-FRIGATE": PRINT
DO
S$ = INKEY$
LOOP UNTIL S$ >= "1" AND S$ <= "4"
ENEMY$ = ""
IF S$ = "1" THEN CLASS$ = "DREADOUGHT"
IF S$ = "2" THEN CLASS$ = "CRUISER"
IF S$ = "3" THEN CLASS$ = "DESTROYER"
IF S$ = "4" THEN CLASS$ = "FRIGATE"
PRINT
PRINT
COLOR 5: PRINT "YOUR SHIP WILL BE A ": COLOR 13
PRINT
PRINT F$; : PRINT " "; CLASS$
COLOR 5: PRINT : PRINT : PRINT : PRINT "HIT ANY KEY"
DO
A$ = INKEY$
LOOP UNTIL A$ <> ""
END SUB

SUB IMPULSESUB

LOCATE 12, 2: PRINT SPACE$(22)
LOCATE 12, 2
COLOR 15: PRINT "P"; : COLOR 7: PRINT "URSUIT OR ";
COLOR 15: PRINT "E"; : COLOR 7: PRINT "VADE"
DO
A$ = INKEY$
IF A$ = CHR$(8) THEN GOTO ENDIMPULSE
LOOP WHILE A$ = "" AND A$ <> "P" AND A$ <> "E"
IF A$ <> "" THEN
 L = 0: S = 0: K = 0: XX$ = ""
 FOR V = 1 TO 3
  IF KR(V) = 3 THEN L = L + 1
  IF KR(V) = 1 THEN S = S + 1
  IF KR(V) > 0 THEN K = K + 1
 NEXT V
  IF A$ = "E" AND L = K THEN
   XX$ = "MAXIMUM RANGE!"
  END IF
  IF A$ = "P" AND S = K THEN
   XX$ = "MINIMUM RANGE!"
  END IF
  IF XX$ <> "" THEN
   COLOR 15
   LOCATE 12, 2: PRINT SPACE$(22)
   LOCATE 12, 2: PRINT XX$
   FOR TM = 1 TO 6000 * MDELAY: NEXT
   GOTO ENDIMPULSE
  END IF
END IF
IM = 100
IF SHLDS$ = "Y" THEN IM = IM + 25
IF IDMG = 1 THEN IM = IM * 2
IF IM > IMPULSE THEN
 LOCATE 12, 2: PRINT SPACE$(22)
 LOCATE 12, 2: COLOR 15: PRINT "NOT ENOUGH ENERGY!"
 FOR TM = 1 TO 4000 * MDELAY: NEXT
 GOTO ENDIMPULSE
END IF
IMPULSE = IMPULSE - IM
FOR TM = 1 TO 6000 * MDELAY: NEXT
LOCATE 12, 2: PRINT SPACE$(22)
IF A$ = "P" THEN
 COLOR 7
 LOCATE 12, 2: PRINT "PURSUE "; EN$; ": "; : COLOR 15
 DO
 A$ = INKEY$
 IF A$ = CHR$(8) THEN IMPULSE = IMPULSE + IM: GOTO ENDIMPULSE
 LOOP WHILE A$ = "" OR A$ < "0" OR KX(VAL(A$)) = 0
 PRINT A$: FOR TM = 1 TO 4000 * MDELAY: NEXT
 LOCATE 12, 2: COLOR 15: PRINT SPACE$(22)
 LOCATE 12, 2
 IF KR(VAL(A$)) = 1 THEN
  PRINT "MINIMUM RANGE!"
  FOR TM = 1 TO 6000 * MDELAY: NEXT
  IMPULSE = IMPULSE + IM
  GOTO ENDIMPULSE
 END IF
 PRINT "PURSUING "; EN$
 SA = 100: SB = 300
 FOR SND = 1 TO 200
 FOR SS = SA TO SB STEP 100 * SDELAY
 SOUND SS, .05
 NEXT SS
 SA = SA + .5: SB = SB + .5
 NEXT SND
 FOR TM = 1 TO 4000 * MDELAY: NEXT
 A = VAL(A$)
 KR(A) = KR(A) - 1
 IF KR(A) < 1 THEN KR(A) = 1
ELSE
 LOCATE 12, 2: COLOR 15: PRINT "EVADING "; EN$; "S"
 SA = 100: SB = 300
 FOR SND = 1 TO 200
 FOR SS = SA TO SB STEP 100 * SDELAY
 SOUND SS, .05
 NEXT SS
 SA = SA + .5: SB = SB + .5
 NEXT SND
 FOR TM = 1 TO 4000 * MDELAY: NEXT
 FOR B = 1 TO 3
  IF KR(B) > 0 THEN KR(B) = KR(B) + 1
  IF KR(B) > 3 THEN KR(B) = 3
 NEXT B
END IF
IF NEXTTRN = 0 THEN NEXTTRN = .4 ELSE NEXTTRN = 1
CALL SHIPSSUB
ENDIMPULSE:
END SUB

SUB INSTRUCTIONS
CLS
SCREEN 0
WIDTH 80, 43
COLOR 7
CLS
PRINT "INSTRUCTIONS"
PRINT
PRINT
PRINT "THIS GAME IS A FORWARD VIEW STARSHIP BATTLE SIMULATION. YOUR MISSION";
PRINT "IS TO PROTECT THE STARBASES BY DESTROYING THE ENEMY STARSHIPS WITHIN THE";
PRINT "ALOTTED STARDATES. THE COMBAT DISPLAY WILL SHOW THE RANGE, TARGET NUMBER, AND";
PRINT "SHIELD RATING OF ENEMY SHIPS. STARBASES WILL REPAIR AND RECHARGE ALL SYSTEMS";
PRINT "ONCE EACH. WEAPONS WILL VARY FOR EACH FLEET. A TURN IS EQUAL TO .1 STARDATES."
PRINT
PRINT "ENEMY STARSHIP COLORS:"
PRINT "BROWN-DREADNOUGHTS, PURPLE-CRUISERS, BLUE-DESTROYERS, GREEN-FRIGATES"
PRINT
PRINT "TARGET RANGES:"
PRINT "S-SHORT (GREEN), M-MEDIUM (YELLOW), L-LONG (RED)"
PRINT "W-WARP DRIVE ENGAGING (THE COLOR WILL REPRESENT THE PRESENT RANGE)"
PRINT "BEAM WEAPONS ARE MORE EFFECTIVE AND TORPEDO WEAPONS ARE MORE ACCURATE AT"
PRINT "SHORTER RANGES"
PRINT
PRINT "ENERGY RECHARGE RATE PER TURN:"
PRINT "(NUMBER OF SYSTEMS RECHARGING - MAXIMUM RECHARGE RATE)"
PRINT "1-250, 2-200, 3-150, 4-100, 5-50"
PRINT "100 MAIN ENERGY RECHARGE, 250 IF NO SYSTEMS ARE RECHARGING"
PRINT
PRINT "THE STARMAP CODES ARE:"
PRINT "BLUE-YOUR SHIP; RED-ENEMY; GREEN-STARBASES; PURPLE-USED STARBASES"
PRINT "NUMBER OF ENEMY STARSHIPS IN A SECTOR; DARK RED-1, RED-2, BRIGHT RED-3"
PRINT
PRINT "SYSTEM DAMAGE:"
PRINT "SHIELDS-SHIELDS EFFECTIVENESS WILL BE DECREASED"
PRINT "LR SENSORS-SENSOR DETECTION RANGE WILL BE REDUCED TO ONE"
PRINT "PHASERS, DISRUPTORS, BLASTERS-DAMAGE WILL BE HALVED"
PRINT "TORPEDOES-HALF OF THE TORPEDO TUBES WILL BE OUT"
PRINT "WARP DRIVE AND IMPULSE-ENERGY DRAIN WILL BE DOUBLED"
PRINT
PRINT "HIT ANY KEY"
DO
A$ = INKEY$
LOOP WHILE A$ = ""
CLS
PRINT "COMMANDS"
PRINT
PRINT
PRINT "S-SHIELDS; RAISES AND LOWERS SHIELDS"
PRINT
PRINT "L-LR SENSORS; ACTIVATES LONG RANGE SENSORS (ENERGY COST: 125 EACH USE)"
PRINT "  DETECTS ENEMY STARSHIPS WITHIN A TWO SECTOR RADIUS"
PRINT
PRINT "P-PHASERS, B-BLASTERS, D-DISRUPTORS; FIRES BEAM WEAPONS"
PRINT "  ENTER THE AMOUNT YOU WISH TO FIRE AT EACH TARGET OR THE TAB KEY FOR"
PRINT "  MAXIMUM POWER AVAILABLE"
PRINT
PRINT "T-TORPEDOES; FIRES PHOTON OR PLASMA TORPEDOES"
PRINT "  (ENERGY COST: PHOTON 50, PLASMA 100 FOR EACH FIRED)"
PRINT "  ENTER THE NUMBER OF TORPEDOES TO FIRE AND THEN A TARGET NUMBER FOR EACH"
PRINT
PRINT "I-IMPULSE; (ENERGY COST: 100 EACH MOVE)"
PRINT "  WILL ALLOW YOU TO PURSUE ONE OR EVADE ALL ENEMY STARSHIPS"
PRINT
PRINT "W-WARP DRIVE; WILL ENGAGE WARP DRIVE (ENERGY COST: 200 PER SECTOR)"
PRINT "  ENTER THE SECTOR YOU WISH TO MOVE TO AS COORDINATES X,Y"
PRINT
PRINT "E-ENERGY; WILL ALLOW YOU TO SELECT THE SYSTEMS TO RECHARGE"
PRINT "  BLUE STAR-SYSTEM RECHARGING, GREEN STAR-SYSTEM FULLY CHARGED"
PRINT "  ENTER THE FIRST LETTER OF THE SYSTEM, N FOR NONE, A FOR ALL,"
PRINT "  OR O AND THE FIRST LETTER OF THE SYSTEM FOR ONLY ONE SYSTEM"
PRINT
PRINT "R-RECON PROBE; (ENERGY COST: 50 FOR EACH LAUNCHED)"
PRINT "  ENTER THE SECTOR FOR THE PROBE TO RECON, DETECTION RANGE IS ONE SECTOR"
PRINT
PRINT "TAB-WAIT ONE TURN OR USE MAX PHASERS WHEN TARGETING PHASER FIRE"
PRINT "BACKSPACE-ABORT PRESENT COMMAND AND RETURN TO THE COMMAND PROMPT"
PRINT "Z-GAME SETTINGS, Q-DISPLAY SCORE AND RATING, ESC-ABORT GAME"
PRINT
PRINT "ALL MOVEMENT WILL USE 25% EXTRA ENERGY WITH SHIELDS UP. YOU CAN MOVE AND FIRE";
PRINT "ONE WEAPON OR LAUNCH ONE PROBE EACH TURN. THE TAB KEY WILL ALLOW YOU TO";
PRINT "PROCEED TO THE NEXT TURN WHEN AT THE COMMAND PROMPT. LR SENSORS WILL STAY";
PRINT "ACTIVE UNTIL YOU MOVE TO A NEW SECTOR AND RECON PROBES WILL STAY ACTIVE ONLY"
PRINT "ONE TURN."
PRINT
PRINT "HIT ANY KEY"
DO
A$ = INKEY$
LOOP WHILE A$ = ""
CLS
PRINT "SCORING AND RATING"
PRINT
PRINT
PRINT "YOUR SCORE WILL BE GIVEN AT THE END OF THE GAME. 25% OF YOUR SCORE"
PRINT "WILL BE DEDUCTED IF YOUR SHIP IS DESTROYED. YOUR RATING IS BASED ON"
PRINT "YOUR SCORE DIVIDED BY THE TOTAL SCORE POSSIBLE."
PRINT
PRINT "SCORE PER KILL CHART:"
PRINT
PRINT "YOUR                           ENEMY SHIP CLASS"
PRINT "SHIP CLASS        DREADNOUGHT   CRUISER   DESTROYER   FRIGATE"
PRINT
PRINT "DREADNOUGHT          1000          750        500        250"
PRINT "CRUISER              1250         1000        750        500"
PRINT "DESTROYER            1500         1250       1000        750"
PRINT "FRIGATE              1750         1500       1250       1000"
PRINT
PRINT "HIT ANY KEY"
DO
A$ = INKEY$
LOOP WHILE A$ = ""
CLS
PRINT "NOTE: THIS GAME WAS DESIGNED ON A 386DX 40MHZ MACHINE WITH A 1 MEG SVGA"
PRINT "MONITOR AND 4 MEGS OF RAM WHILE RUNNING QBASIC FROM WINDOWS. YOU MAY HAVE TO"
PRINT "EXPERIMENT WITH THE GAME SETTINGS IF YOU HAVE A DIFFERENT SETUP. A 20MHZ "
PRINT "MACHINE OR BETTER IS RECOMMENDED TO RUN THIS GAME. LAUNCHING QBASIC FROM"
PRINT "WINDOWS WILL ALSO HELP A GREAT DEAL. THE GAME WILL ASK FOR THE SETTINGS EACH"
PRINT "TIME IT RUNS. MY MACHINE SETTINGS WERE SOUND SPEED 2, WEAPON SPEED 2, AND"
PRINT "MESSAGE DELAY 2. WHEN THE GAME ASKS FOR YOUR SETTINGS THE YELLOW NUMBER "
PRINT "DIPLAYED TO THE RIGHT IS THE PRESENT SETTING. PLAYERS WITH 80+ MHZ MACHINES"
PRINT "MAY WANT TO TURN THE TURBO OFF FOR BETTER GAME PLAY. IF YOU STILL HAVE"
PRINT "PROBLEMS RUNNING THIS GAME PLEASE CONTACT ME VIA E-MAIL AT CHRISD7538."
PRINT
PRINT "HIT ANY KEY"

DO
A$ = INKEY$
LOOP WHILE A$ = ""
WIDTH 40, 25
SCREEN 13
CLS
END SUB

SUB INTRO

'FEDERATION DREADNOUGHT

X = 132: Y = 50: CL = 9: CD = 1

'FRONT
PSET (X, Y + 5), CL
DRAW "NR25D1NR25R10D1NR5R2D1NR1U5NR1D1L2NR5"
'DRIVES
PSET (X + 19, Y + 1), CL
DRAW "NR25R1D1NR23 BD4BR7 NR25R1D1NR23"
'BODY
PSET (X + 22, Y + 10), CL
DRAW "NR18D1NR20D1L1NR21D1NR16R1D1NR10"
'PYLONS
PSET (X + 22, Y + 3), CD
DRAW "NR4D1L1NR4 BD3 L1NR5R1D1NR5R1D1R5 BD1BR2 NR3R2U1NR3R2U1NR3"

'KLINGON DREADNOUGHT

X = 45: Y = 80: CL = 10: CD = 2
'FRONT
PSET (X + 4, Y + 6), CL
DRAW "R1D1L4D1L1C2NR6R1D1C10NR7D1L1NR9D1NR7R1D1NR4"
'BODY
PSET (X + 23, Y + 8), CL
DRAW "NR16D1L1NR16R1D1NR14R1D1NR12 BD3BR7 NR16D1NR16"
'NECK, WING, AND TOP
PSET (X + 9, Y + 9), CD
DRAW "R12 BR2BU1 NR14R4D1NR12R4D1NR11R5D1NR5D1L1NR5D1L1NR5 BU6BR2 NR5U1NR5"

'ROMULAN DREADNOUGHT

X = 227: Y = 87: CL = 12: CD = 4
'BODY AND DRIVE
PSET (X + 1, Y + 6), CL
DRAW "NR8R3U1R2 BD3 L6C4R11C12NR24R2U1NR24R1U1R22U1R1L11 BU2BL1 L14U1R15"
'FRONT AND WING
PSET (X, Y + 7), CD
DRAW "R10 BR8BD1 NR13U1L1NR12U1L1NR11U1L1NR10U1L1NR9"

'GORN DREADNOUGHT

X = 152: Y = 117: CL = 42: CD = 6
'BODY
PSET (X, Y), CL
DRAW "NR18D1L1NR20D1L5NR25D1L1NR27D1L1NR27D1L1NR27R3D1R11BR3R8"
'WING
PSET (X + 10, Y - 1), CD
DRAW "NR7R2D1NR3D1NR3D1L1NR3D1NR3D1L1NR3D1NR3D1L1NR3D1L6NR17D1NR16"


'TITLE
LOCATE 1, 17: COLOR 5: PRINT "VERSION 6"
LOCATE 12, 17: COLOR 13: PRINT "STARSHIP"
LOCATE 23, 16: COLOR 5: PRINT "HIT ANY KEY"


'STARS
 DIM GX(500), GY(500)
 FOR G = 1 TO 500
 A$ = INKEY$
 IF A$ <> "" THEN GOTO ENDOFSUB
 DO
  X = INT(RND(1) * 319) + 1: Y = INT(RND(1) * 199) + 1
  GX(G) = X: GY(G) = Y
  LOOP UNTIL POINT(X, Y) = 0
  PSET (X, Y), INT(RND(1) * 15) + 17
 NEXT G
 
G = 0
X = 320: Y = 50: CL = 9: CD = 1
DO
A$ = INKEY$
G = G + 1: IF G = 501 THEN G = 1
PSET (GX(G), GY(G)), INT(RND(1) * 15) + 17

LOOP UNTIL A$ <> ""
ENDOFSUB:
END SUB

SUB KDESTROYED
 LOCATE KY(KHIT), KX(KHIT) + 1
 LOCATE 12, 2: PRINT SPACE$(22)
 LOCATE 12, 2: COLOR 15: PRINT EN$; " DESTROYED!"
 S9 = KTYPE(KN(KHIT))
 IF S9 <= 4 THEN S9 = S9 * 250
 IF S9 = 5 OR S9 = 9 OR S9 = 13 THEN S9 = 1000
 IF S9 = 6 OR S9 = 10 OR S9 = 14 THEN S9 = 750
 IF S9 = 7 OR S9 = 11 OR S9 = 15 THEN S9 = 500
 IF S9 = 8 OR S9 = 12 OR S9 = 16 THEN S9 = 250
 SCORE = SCORE + S9
 PSET (KX(KHIT) * 8 - 3, KY(KHIT) * 8 - 9), 0
  DRAW "s7r3d1r2u1r2d1r1d2l1d2r1d1l1d1l3u1l2d1l2u1l1u2r1u2l1u1r1u1bf1p0,0"
'KILL
 PSET (KX(KHIT) * 8 - 3, KY(KHIT) * 8 - 9), 40
  DRAW "s7r3d1r2u1r2d1r1d2l1d2r1d1l1d1l3u1l2d1l2u1l1u2r1u2l1u1r1u1bf1p40,40"
'EXPLOSION
 PSET (KX(KHIT) * 8 - 1, KY(KHIT) * 8 - 8), 14
  DRAW "s4r3d1r2u1r2d1r1d2l1d2r1d1l1d1l3u1l2d1l2u1l1u2r1u2l1u1r1u1bf1p14,14"

 
   OX = KX(KHIT) * 8 - 4: OY = KY(KHIT) * 8 - 9
   FOR OZ = 1 TO 30
P102:
   OOX = INT(RND(1) * 15): OOY = INT(RND(1) * 17)
   OOX = OOX + OX: OOY = OOY + OY
   IF POINT(OOX, OOY) <> 14 AND POINT(OOX, OOY) <> 40 THEN GOTO P102
   PSET (OOX, OOY), 8
   NEXT OZ
 
 FOR Z = 1 TO 1000 / SDELAY
  SND = INT(RND(1) * 750) + 37
  SOUND SND, .025 * SDELAY
 NEXT Z
FOR TM = 1 TO 4000 * MDELAY: NEXT
 LOCATE KY(KHIT), KX(KHIT) - 1: PRINT "     "
 LOCATE KY(KHIT) - 1, KX(KHIT) - 1: PRINT "     "
 LOCATE KY(KHIT) + 1, KX(KHIT) - 1: PRINT "     "
 KDSTRYD = KDSTRYD + 1: N = KN(KHIT)
 KY(KHIT) = 0: KX(KHIT) = 0
 EVADING(KHIT) = 0: LEAVING(KHIT) = 0
 KSHLD(N) = 0: KTYPE(N) = 0: KDMG(N) = 0
 KSX(N) = 0: KSY(N) = 0: KR(KHIT) = 0: KN(KHIT) = 0
 SECTOR(SECTORX, SECTORY) = SECTOR(SECTORX, SECTORY) - 1
 IF SECTOR(SECTORX, SECTORY) < 0 THEN SECTOR(SECTORX, SECTORY) = 0
 CALL STARSSUB
 IF KDSTRYD = STARSHIPS THEN CALL WINGAME
END SUB

SUB KLMOVE
ARRIVING = INT(RND(1) * 20) + 1
IF SECTOR(SECTORX, SECTORY) >= 3 THEN ARRIVING = 0
IF ARRIVING = 1 THEN
 B = 0
 FOR A = 1 TO STARSHIPS
  OD = KDMG(O): OS = KSHLD(A)
  IF OD < CINT(OS * .51) AND KSX(A) <> SECTORX AND KSY(A) <> SECTORY THEN B = B + 1
 NEXT A
 IF B = 0 THEN ARRIVING = 0
END IF
SHIPMOVING = 0
IF ARRIVING = 1 THEN
 DO
  O = INT(RND(1) * STARSHIPS) + 1
  OD = KDMG(O): OS = KSHLD(O)
 LOOP WHILE OD >= CINT(OS * .51) OR KSHLD(O) < 1
 SHIPMOVING = O
END IF

FOR A = 1 TO STARSHIPS
IF KSHLD(A) = 0 THEN GOTO NEXTKLNG
A1 = 0: R = 0
MOVING = INT(RND(1) * 10) + 1
IF ARRIVING = 1 AND SHIPMOVING = A THEN MOVING = 1

'--LEAVING--
LEAVING = 0
FOR B = 1 TO 3
 IF KN(B) = A AND LEAVING(B) = 2 THEN LEAVING = 1: A1 = B
NEXT B
IF LEAVING = 0 AND KSX(A) = SECTORX AND KSY(A) = SECTORY THEN GOTO NEXTKLNG
IF LEAVING = 1 THEN
 MOVING = 1
 EVADING(A1) = 1
 LOCATE KY(A1), KX(A1) - 1: PRINT "     "
 LOCATE KY(A1) + 1, KX(A1) - 1: PRINT "     "
 LOCATE KY(A1) - 1, KX(A1) - 1: PRINT "     "
 CALL STARSSUB
 KX(A1) = 0: KY(A1) = 0: KR(A1) = 0: KN(A1) = 0
 LEAVING(A1) = 0: EVADING(A1) = 0
END IF

'--NEW LOCATION--
IF MOVING = 1 AND KSHLD(A) > 0 THEN
RERUN:
 X = INT(RND(1) * 10): Y = INT(RND(1) * 10)
 IF ARRIVING = 1 THEN X = SECTORX: Y = SECTORY: ARRIVING = 0
 IF SECTOR(X, Y) >= 3 THEN GOTO RERUN
 IF KSX(A) = X AND KSY(A) = Y THEN GOTO RERUN
 IF KDMG(A) >= KSHLD(A) * .51 AND SECTORX = X AND SECTORY = Y THEN GOTO RERUN
 SECTOR(KSX(A), KSY(A)) = SECTOR(KSX(A), KSY(A)) - 1
 SECTOR(X, Y) = SECTOR(X, Y) + 1
 KSX(A) = X: KSY(A) = Y

'--OMEGAN ARRIVING--
 IF SECTORX = X AND SECTORY = Y THEN
NEWXY1:
  XX = 4 + INT(RND(1) * 32): YY = 4 + INT(RND(1) * 3)
  FOR D = 1 TO 3
   IF KX(D) > 0 THEN
    X4 = KX(D)
    X1 = ABS(X4 - XX)
    IF X1 < 6 THEN GOTO NEWXY1
   END IF
  NEXT D
  P = 0
  DO
   P = P + 1
  LOOP WHILE KX(P) <> 0
  KX(P) = XX: KY(P) = YY: KN(P) = A
  R = INT(RND(1) * 3) + 1: KR(P) = R
  LOCATE 12, 2: PRINT SPACE$(22)
  LOCATE 12, 2: COLOR 7
  PRINT EN$; : COLOR 15: PRINT P; : COLOR 7: PRINT "ARRIVING!"
  CALL ALARM
  CALL SHIPSSUB
  EVADING(P) = 0: LEAVING(P) = 0
  FOR TM = 1 TO 4000 * MDELAY: NEXT
  IF INT(RND(1) * 100) + 1 > 50 THEN
   ARRIVING(P) = 1
   CALL ENEMYFIRESUB
   ARRIVING(P) = 0
  END IF
 END IF
END IF
NEXTKLNG:
NEXT A
END SUB

SUB KREPAIRS
FOR A = 1 TO STARSHIPS
IF SECTORX = KSX(A) AND SECTORY = KSY(A) AND KSHLD(A) > 0 THEN
 B = 0
 DO: B = B + 1: LOOP UNTIL KN(B) = A
 IF LEAVING(B) > 0 THEN GOTO KRPR
END IF
IF KSHLD(A) = 0 OR KDMG(A) = 0 THEN GOTO KRPR
 VQ = INT(RND(1) * 10) + 1
 IF VQ > 2 THEN GOTO KRPR
 R = CINT(KSHLD(A) * .1)
 RNDN = R: CALL RAND: RPR = RNDM(3)
 KDMG(A) = KDMG(A) - RPR
 IF KDMG(A) <= 0 THEN KDMG(A) = 0
KRPR:
NEXT A
END SUB

SUB LEVELSUB

A$ = ""
SCENTER:
LOCATE 1, 1
COLOR 13
PRINT "         CHOOSE SCENARIO SETTINGS"
PRINT
PRINT
COLOR 13: PRINT "1"; : COLOR 5
IF A$ = "1" THEN COLOR 14
PRINT "-10 ENEMY STARSHIPS"
PRINT "  1 STARBASE, 5 STARDATES"
PRINT
COLOR 13: PRINT "2"; : COLOR 5
IF A$ = "2" THEN COLOR 14
PRINT "-20 ENEMY STARSHIPS"
PRINT "  2 STARBASES, 10 STARDATES"
PRINT
COLOR 13: PRINT "3"; : COLOR 5
IF A$ = "3" THEN COLOR 14
PRINT "-30 ENEMY STARSHIPS"
PRINT "  3 STARBASES, 15 STARDATES"
PRINT
COLOR 13: PRINT "4"; : COLOR 5
IF A$ = "4" THEN COLOR 14
PRINT "-40 ENEMY STARSHIPS"
PRINT "  4 STARBASES, 20 STARDATES"
PRINT
COLOR 13: PRINT "5"; : COLOR 5
IF A$ = "5" THEN COLOR 14
PRINT "-50 ENEMY STARSHIPS"
PRINT "  5 STARBASES, 25 STARDATES"
COLOR 5
PRINT ""
PRINT "Press Enter to End"
GETVER:
A$ = INKEY$
IF A$ = "" THEN GOTO GETVER
IF A$ = "1" THEN STARBASES = 1: STARSHIPS = 10: STRDT = 50
IF A$ = "2" THEN STARBASES = 2: STARSHIPS = 20: STRDT = 100
IF A$ = "3" THEN STARBASES = 3: STARSHIPS = 30: STRDT = 150
IF A$ = "4" THEN STARBASES = 4: STARSHIPS = 40: STRDT = 200
IF A$ = "5" THEN STARBASES = 5: STARSHIPS = 50: STRDT = 250
IF A$ = CHR$(13) THEN GOTO nextthing
LSTRDT = STRDT
GOTO SCENTER
nextthing:
IF STARBASES = 0 THEN STARBASES = 1: STARSHIPS = 10: STRDT = 50
CLS
enenter:
LOCATE 1, 1: COLOR 5
PRINT "CHOOSE THE SHIPS YOU WILL FIGHT"
PRINT
PRINT
COLOR 13: PRINT "1"; : COLOR 5
IF A$ = "1" THEN COLOR 14
PRINT "-FRIGATES"
PRINT
COLOR 13: PRINT "2"; : COLOR 5
IF A$ = "2" THEN COLOR 14
PRINT "-DESTROYERS"
PRINT
COLOR 13: PRINT "3"; : COLOR 5
IF A$ = "3" THEN COLOR 14
PRINT "-CRUISERS"
PRINT
COLOR 13: PRINT "4"; : COLOR 5
IF A$ = "4" THEN COLOR 14
PRINT "-DREADNOUGHTS"
PRINT
COLOR 5
PRINT "PRESS ENTER TO END"
enmflee:
A$ = INKEY$
IF A$ = "" THEN GOTO enmflee
IF A$ = "1" THEN ship$ = "frigates": GOTO enenter
IF A$ = "2" THEN ship$ = "destroyers": GOTO enenter
IF A$ = "3" THEN ship$ = "cruisers": GOTO enenter
IF A$ = "4" THEN ship$ = "dreadnoughts": GOTO enenter
IF A$ = CHR$(13) THEN GOTO LVLEND
GOTO enmflee
LVLEND:     
END SUB

SUB MAPSETUP


FOR A = 1 TO STARBASES
NEWLOC:
DO
 X = INT(RND(1) * 10): Y = INT(RND(1) * 10)
LOOP WHILE SECTOR(X, Y) <> 0
FOR B = 1 TO STARBASES
 XX = ABS(SBX(B) - X): YY = ABS(SBY(B) - Y)
 IF XX > YY THEN WW = XX ELSE WW = YY
 IF WW < 3 THEN GOTO NEWLOC
NEXT
 SECTOR(X, Y) = 9: SBX(A) = X: SBY(A) = Y
NEXT

NEWSEC:
DO
 X = INT(RND(1) * 10): Y = INT(RND(1) * 10)
LOOP WHILE SECTOR(X, Y) <> 0
FOR B = 1 TO 3
 XX = ABS(SBX(B) - X): YY = ABS(SBY(B) - Y)
 IF XX > YY THEN WW = XX ELSE WW = YY
 IF WW < 5 THEN GOTO NEWSEC
NEXT
 SECTORX = X: SECTORY = Y

FOR A = 1 TO STARSHIPS
XY:
DO
 X = INT(RND(1) * 10): Y = INT(RND(1) * 10)
LOOP WHILE SECTOR(X, Y) >= 3
IF X = SECTORX AND Y = SECTORY THEN GOTO XY
SECTOR(X, Y) = SECTOR(X, Y) + 1
KSX(A) = X: KSY(A) = Y
NEWK:
D = 1
IF ENEMY$ = "R" THEN
 D = 8
END IF
IF ENEMY$ = "G" THEN
 D = 12
END IF
IF ENEMY$ = "F" THEN
 D = 16
END IF
KTYPE(A) = D
IF D = 1 OR D = 8 OR D = 12 OR D = 16 THEN
 KSHLD(A) = 400
END IF
NEXT A

END SUB

SUB OMEGANSSUB

P = 0
FOR A = 1 TO STARSHIPS
IF KSX(A) = SECTORX AND KSY(A) = SECTORY AND KTYPE(A) <> 0 THEN
 P = P + 1
NEWXY:
 X = 4 + INT(RND(1) * 32): Y = 4 + INT(RND(1) * 3)
 'Y = 6
 FOR D = 1 TO 3
  IF KX(D) > 0 THEN
   X4 = KX(D)
   X1 = ABS(X4 - X)
   IF KX(D) > 0 THEN
    IF X1 < 6 THEN GOTO NEWXY
   END IF
  END IF
 NEXT D
 EVADING(P) = 0
 KX(P) = X: KY(P) = Y: KN(P) = A
 R = INT(RND(1) * 3) + 1: KR(P) = R
END IF
NEXT A
CALL SHIPSSUB
END SUB

SUB PHASERSSUB

PHASERSTART:
FOR X = 1 TO 3
PHASERS(X) = 0: NEXT X
FOR XXX = 1 TO 3
IF KX(XXX) = 0 THEN GOTO NEXTTRGT
PHASERAMT:
AMT$ = ""
LOCATE 12, 2: PRINT SPACE$(22)
LOCATE 12, 2: COLOR 7
PRINT EN$; " "; CHR$(48 + XXX); ": "; : COLOR 15
DO
 DO
  A$ = INKEY$
  FIRING = 0
 IF A$ = CHR$(9) THEN
  A10 = 0
  FOR A9 = 1 TO 3
   IF KX(A9) > 0 THEN A10 = A10 + PHASERS(A9)
  NEXT A9
  A$ = STR$(PHASERS - A10): Z = LEN(A$)
  AMT$ = MID$(A$, 2, Z)
  FIRING = 1
  PRINT AMT$
  GOTO PAMT
 END IF
 IF A$ = CHR$(13) THEN : GOTO PAMT
 IF A$ = CHR$(8) THEN GOTO PHASEREND
 LOOP WHILE A$ < "0" OR A$ > "9"
 AMT$ = AMT$ + A$
 L = LEN(AMT$): IF L > 4 THEN GOTO PHASERAMT
 PRINT A$;
LOOP WHILE L < 5
PAMT:
 AMT = VAL(AMT$)
 IF AMT > 1000 THEN GOTO PHASERAMT
 TOT = 0
 PHASERS(XXX) = AMT
 FOR Q = 1 TO 3
  TOT = TOT + PHASERS(Q)
 NEXT Q
 IF TOT > PHASERS OR TOT > 1000 THEN
  PHASERS(XXX) = 0
  GOTO PHASERAMT
 END IF
FOR TM = 1 TO 4000 * MDELAY: NEXT
 IF FIRING = 1 THEN GOTO FIREBEGIN
NEXTTRGT:
NEXT XXX
FIREBEGIN:
PHASERS = PHASERS - TOT

'PHASERS FIRING

LOCATE 12, 2: PRINT SPACE$(22)
FOR FF = 1 TO 3
 IF PHASERS(FF) = 0 THEN GOTO NEXTFIRING
 LOCATE 12, 2: PRINT SPACE$(22)
 LOCATE 12, 2
 IF fleet$ = "F" THEN
  COLOR 15: PRINT "FIRING PHASERS!"
 END IF

'PHASERS

XX = KX(FF) + 1: K = FF: C9 = 4
IF fleet$ = "F" THEN
 LINE (KX(K) * 8 + 2, 83)-(KX(K) * 8 + 2, KY(K) * 8 - 1), C9
 LINE (KX(K) * 8 + 3, 83)-(KX(K) * 8 + 3, KY(K) * 8 - 1), C9
END IF

'DAMAGE CALC

 DP = PHASERS(FF): DR = KR(FF)
 RNDN = DP: CALL RAND: DH = RNDM(3): DM = RNDM(2): DL = RNDM(1)
 IF PDMG = 1 THEN
  DH = CINT(DH * .51): DL = CINT(DL * .51): DM = CINT(DM * .51)
 END IF
 KD = KDMG(KN(FF)): KS = KSHLD(KN(FF))
 IF DR = 1 THEN KD = KD + DH: DD = DH
 IF DR = 2 THEN KD = KD + DM: DD = DM
 IF DR = 3 THEN KD = KD + DL: DD = DL
 DF = INT(RND(1) * 100) + 1
 DE = KS - KD - DD: DE = CINT(DE / KS * 100)
 K1 = 80
 IF DE < 51 THEN K1 = 60
 IF DE < 26 THEN K1 = 40
 KDMG(KN(FF)) = KDMG(KN(FF)) + DD
 KD = KDMG(KN(FF)): KS = KSHLD(KN(FF))
 IF DF > K1 OR KD >= KS THEN
  PSET (KX(FF) * 8 - 1, KY(FF) * 8 - 8), 0
  DRAW "s4r3d1r2u1r2d1r1d2l1d2r1d1l1d1l3u1l2d1l2u1l1u2r1u2l1u1r1u1bf3p0,0"
  PSET (KX(FF) * 8 - 1, KY(FF) * 8 - 8), 14
  DRAW "s4r3d1r2u1r2d1r1d2l1d2r1d1l1d1l3u1l2d1l2u1l1u2r1u2l1u1r1u1bf3p14,14"
  OX = KX(FF) * 8 - 2: OY = KY(FF) * 8 - 8
  FOR OZ = 1 TO 20
P100:
   OOX = INT(RND(1) * 11): OOY = INT(RND(1) * 9)
   OOX = OOX + OX: OOY = OOY + OY
   IF POINT(OOX, OOY) <> 14 THEN GOTO P100
   PSET (OOX, OOY), 8
  NEXT OZ
 ELSE
  PSET (KX(FF) * 8 - 1, KY(FF) * 8 - 8), 48
  DRAW "s4r3d1r2u1r2d1r1d2l1d2r1d1l1d1l3u1l2d1l2u1l1u2r1u2l1u1r1u1bf3p48,48"
 END IF
  
'PHASER FIRE

IF fleet$ = "F" THEN
 C0 = 0
 FOR SND = 1 TO 40
  C0 = C0 + 1: IF C0 > 1 THEN C0 = 0
  IF fleet$ = "F" THEN
   IF C0 = 0 THEN C1 = 4
   IF C0 = 1 THEN C1 = 12
  ELSE
   IF C0 = 0 THEN C1 = 42
   IF C0 = 1 THEN C1 = 43
  END IF
  LINE (KX(K) * 8 + 2, 83)-(KX(K) * 8 + 2, KY(K) * 8 - 1), C1
  LINE (KX(K) * 8 + 3, 83)-(KX(K) * 8 + 3, KY(K) * 8 - 1), C1
  S1 = 1000: S2 = 1200
  FOR SS = S1 TO S2 STEP 50
   SOUND SS, .1 / SDELAY
  NEXT SS
 NEXT SND
 LINE (KX(K) * 8 + 2, 83)-(KX(K) * 8 + 2, KY(K) * 8 - 1), 0
 LINE (KX(K) * 8 + 3, 83)-(KX(K) * 8 + 3, KY(K) * 8 - 1), 0
END IF

IF KD >= KS THEN
 KHIT = FF: CALL KDESTROYED
ELSE
 PSET (KX(FF) * 8, KY(FF) * 8 - 8), 0
 DRAW "s4r3d1r2u1r2d1r1d2l1d2r1d1l1d1l3u1l2d1l2u1l1u2r1u2l1u1r1u1bf3p0,0"
 CALL SHIPSSUB
END IF
CALL STARSSUB

'DAMAGE INFLICTED

IF KD < KS THEN
 LOCATE 12, 2: PRINT SPACE$(22)
 LOCATE 12, 2: COLOR 7: PRINT "DAMAGE:"; : COLOR 15: PRINT STR$(DD)
FOR TM = 1 TO 6000 * MDELAY: NEXT
END IF
NEXTFIRING:
NEXT FF
IF NEXTTRN = 0 THEN NEXTTRN = .6 ELSE NEXTTRN = 1
PHASEREND:
END SUB

SUB PROBECLEAR
PROBE$ = "NO"
 FOR X = 0 TO 9
  FOR Y = 0 TO 9
   PROBE(X, Y) = 0
  NEXT Y
 NEXT X
END SUB

SUB PROBESUB
LOCATE 12, 2: PRINT SPACE$(22)
COLOR 7: LOCATE 12, 2: PRINT "ENTER SECTOR: ": COLOR 15
DO
 X$ = INKEY$
 IF X$ = CHR$(8) THEN GOTO PROBEEND
LOOP WHILE X$ = "" OR X$ < "0" OR X$ > "9"
LOCATE 12, 16
PRINT CHR$(VAL(X$) + 48); : PRINT ","
DO
 Y$ = INKEY$
 IF Y$ = CHR$(8) THEN GOTO PROBEEND
LOOP WHILE Y$ = "" OR Y$ < "0" OR Y$ > "9"
LOCATE 12, 18
PRINT CHR$(VAL(Y$) + 48)
SX1 = VAL(X$): SY1 = VAL(Y$)
FOR TM = 1 TO 6000 * MDELAY: NEXT
CALL PROBECLEAR
PROBE(SX1, SY1) = 1
AA = 2000: BB = 1037

FOR SND = 1 TO 100
 FOR SS = AA TO BB STEP -50 * SDELAY
  SOUND SS, .05
 NEXT SS
 AA = AA - 50
NEXT SND
 FG = 0
 FOR TF = 78 TO 40 STEP -3
  IF FG = 1 THEN FH = 15 ELSE FH = 11
  FG = FG + 1: IF FG > 1 THEN FG = 0
   PSET (155, TF), 3
   DRAW "S4NR1D1L1NR3R1D1R1"
   PSET (153, TF - 1), FH
   DRAW "S4 F1 BR3E1G1 BD2F1H1 BL3G1"
   FOR TM = 1 TO 350 / WDELAY: NEXT
   PSET (155, TF), 0
   DRAW "S4R1D2L1U1L1R3"
   PSET (153, TF - 1), 0
   DRAW "S4 F1 BR3E1G1 BD2F1H1 BL3G1"
 NEXT TF
 CALL SHIPSSUB
 CALL STARSSUB

PROBE$ = "YES"
PROBE = PROBE - 1
ENERGY = ENERGY - 50
NEXTTRN = 1
CALL DISPLAY
PROBEEND:
END SUB

SUB RAND

B = 5
FOR A = 1 TO B
 RN(A) = 0
NEXT A
IF RNDN = 0 THEN GOTO ENDRAND
L = 0: M = 0: H = 0

'HIGH
FOR A = 1 TO B
 RN(A) = INT(RND(1) * RNDN) + 1
NEXT A
FOR A = 1 TO B
 IF RN(A) >= H THEN H = RN(A)
NEXT A

'MEDIUM
FOR A = 1 TO B
 RN(A) = INT(RND(1) * H) + 1
NEXT A
FOR A = 1 TO B
 IF RN(A) >= M THEN M = RN(A)
NEXT A

'LOW
FOR A = 1 TO B
 RN(A) = INT(RND(1) * M) + 1
NEXT A
FOR A = 1 TO B
 IF RN(A) >= L THEN L = RN(A)
NEXT A

RNDM(1) = L: RNDM(2) = M: RNDM(3) = H

'LOCATE 1, 1: PRINT RNDM(1); RNDM(2); RNDM(3)
'DO
'A$ = INKEY$
'LOOP UNTIL A$ <> ""

ENDRAND:
END SUB

SUB SCORESUB
LOCATE 12, 2: PRINT SPACE$(22)
COLOR 7
LOCATE 12, 2
PRINT "SCORE:";
COLOR 15
PRINT SCORE
FOR TM = 1 TO 15000 * MDELAY: NEXT
LOCATE 12, 2: PRINT SPACE$(22)
COLOR 7
LOCATE 12, 2
PRINT "RATING:";
COLOR 15
PRINT STR$(CINT(SCORE / TOTAL * 100)); "%"
FOR TM = 1 TO 15000 * MDELAY: NEXT
END SUB

SUB SENSORSSUB
IF SENSORS$ = "OFF" AND COMMANDS$ = "L" THEN SENSORS$ = "ON" ELSE GOTO LREND
SENSORS = SENSORS - 125
LOCATE 12, 2: PRINT SPACE$(22)
LOCATE 12, 2: COLOR 15: PRINT "ACTIVATING SENSORS"
FOR TM = 1 TO 4000 * MDELAY: NEXT
 SA = 2000: SB = 2200
 FOR SND = 1 TO 75
 FOR SS = SA TO SB STEP 100 * SDELAY
 SOUND SS, .05
 NEXT SS
 SA = SA + 2: SB = SB + 2
 NEXT SND
LREND:
COMMANDS$ = ""
END SUB

SUB SHIELDSSUB

IF SHIELDS <= 0 AND SHLDS$ = "Y" THEN GOTO S2
IF SHIELDSC = 0 THEN GOTO SHEILDPRINT
SHIELDSC = 0
S2:
COLOR 15
LOCATE 12, 2: PRINT SPACE$(22)
IF SHLDS$ = "N" THEN
 LOCATE 12, 2: PRINT "RAISING SHIELDS"
 SHLDS$ = "Y"
 SA = 100: SB = 300
 FOR SND = 1 TO 100
 FOR SS = SA TO SB STEP 100 * SDELAY
 SOUND SS, .05
 NEXT SS
 SA = SA + 2: SB = SB + 2
 NEXT SND
ELSEIF SHLDS$ = "Y" THEN
 LOCATE 12, 2: PRINT "LOWERING SHIELDS"
 SHLDS$ = "N"
 SA = 300: SB = 500
 FOR SND = 1 TO 100
 FOR SS = SB TO SA STEP -100 * SDELAY
 SOUND SS, .05
 NEXT SS
 SA = SA - 2: SB = SB - 2
 NEXT SND
END IF
SHEILDPRINT:
IF SHLDS$ = "N" THEN
 SC = 7
ELSEIF SHIELDS > CINT((1000) * .51) AND SHLDS$ = "Y" THEN
 SC = 2
ELSEIF SHIELDS <= CINT((1000) * .25) AND SHLDS$ = "Y" THEN
 SC = 4
ELSEIF SHIELDS <= CINT((1000) * .51) AND SHLDS$ = "Y" THEN
 SC = 14
END IF
IF SC <> POINT(4, 4) THEN
 COLOR SC
 FOR Y = 1 TO 25
 FOR X = 1 TO 40
 IF BRDR(Y, X) <> 0 THEN
  LOCATE Y, X: PRINT CHR$(BRDR(Y, X))
 END IF
 NEXT X: NEXT Y
END IF
ENDSHIELDS:
END SUB

SUB SHIPDESTROYED
CLS
COLOR 14
LOCATE 12, 12
PRINT "STARSHIP DESTROYED!"
 FOR Z = 1 TO 1500 / SDELAY
  SND = INT(RND(1) * 500) + 37
  SOUND SND, .025 * SDELAY
 NEXT Z
FOR TM = 1 TO 10000 * MDELAY: NEXT
CLS
STRDT = 0
SCORE = SCORE * .75
IF SCORE <= 0 THEN SCORE = 0
CALL WINGAME
END SUB

SUB SHIPSSUB
FOR A = 1 TO 3
 IF KY(A) > 0 THEN
  LOCATE KY(A), KX(A)
  SH = KSHLD(KN(A)): DM = KDMG(KN(A))
  CLR = 2
  IF DM >= SH * .51 THEN CLR = 14
  IF DM >= SH * .75 THEN CLR = 4
  LOCATE KY(A), KX(A) - 1: PRINT "     "
  COLOR 11
  KXX = KX(A) * 8 - 10: KYY = KY(A) * 8 - 7

'KLINGON FRIGATE

IF KTYPE(KN(A)) = 1 THEN
 X = KXX: Y = KYY
 CD = 2: CL = 10
 IF EVADING(A) = 0 THEN
 'FRONT
 PSET (X + 11, Y + 1), CL
 DRAW "NR3D1L1NR5R1D1R3"
 'LEFT WING
 PSET (X + 10, Y), CD
 DRAW "L1D1R1L2D1R1L3G1L1G2D1"
 'RIGHT WING
 PSET (X + 15, Y), CD
 DRAW "R1D1R1L2R1D1R3F1R1F2D1"
 ELSE
 'FRIGATE BACK
 'FRONT
 PSET (X + 11, Y + 1), CD
 DRAW "NR3D1L1NR5R1D1C10R3"
 'LEFT WING
 PSET (X + 10, Y), CD
 DRAW "L1D1R1L2D1R1L3G1L1G2D1"
 'RIGHT WING
 PSET (X + 15, Y), CD
 DRAW "R1D1R1L2R1D1R3F1R1F2D1"
 'ENGINES
 PSET (X + 10, Y + 2), 14
 DRAW "R1BR3R1"
 END IF
END IF

' ROMULAN FRIGATE

IF KTYPE(KN(A)) = 8 THEN
 X = KXX: Y = KYY - 2
 CD = 2: CL = 10
 IF EVADING(A) = 0 THEN
  'FRONT FRIGATE
  'BODY
  PSET (X + 2, Y + 4), CD
  DRAW "R3F1R3D1R1L1U2L1NR9R3U1R3D1R3L1D2NL1U1R3E1R3"
  'FRONT
  PSET (X + 10, Y + 5), CL
  DRAW "R5"
 ELSE
  'REAR FRIGATE
  'BODY
  PSET (X + 2, Y + 4), CD
  DRAW "R3F1R3D1R1L1U2L1NR9R3U1R3D1R3L1D2NL1U1R3E1R3"
  'FRONT
  PSET (X + 11, Y + 5), CD
  DRAW "R5"
  'ENGINES
  PSET (X + 10, Y + 5), 14
  DRAW "R1BR3R1"
 END IF
END IF

'GORN FRIGATE

IF KTYPE(KN(A)) = 12 THEN
  X = KXX: Y = KYY - 2
  CD = 2: CL = 10
 IF EVADING(A) = 0 THEN
  'FRONT VIEW
  'TOP & BOTTOM
  PSET (X + 12, Y + 1), CD
  DRAW "NR1BD5L3DLDRUENR5R2DRUR3DRDL"
  'FRONT
  PSET (X + 11, Y + 2), CL
  DRAW "NR3D1L1NR5D1L1NR7D1NR7RDC2NR5"
 ELSE
  'REAR VIEW
  'TOP & BOTTOM
  PSET (X + 12, Y + 1), CD
  DRAW "NR1BD5L3DLDRUENR5R2DRUR3DRDL"
  'FRONT
  PSET (X + 11, Y + 2), CL
  DRAW "NR3D1L1NR5D1L1NR7D1C2NR7RDNR5"
  'ENGINES
  PSET (X + 10, Y + 5), 14
  DRAW "R1 BR3 R1"
 END IF
END IF

'FEDERATION FRIGATE

IF KTYPE(KN(A)) = 16 THEN
  X = KXX: Y = KYY
  CD = 2: CL = 10
 IF EVADING(A) = 0 THEN
  'FRONT VIEW
  'BODY AND DRIVES
  PSET (X + 6, Y), CD
  DRAW "GNR15D2GD BR17 U1HHU2"
  'DISH
  PSET (X + 12, Y), CL
  DRAW "NR1DLLNR5DL6NR17R6DNR5R2DR"
 ELSE
 'REAR VIEW
  'DISH
  PSET (X + 12, Y), CL
  DRAW "NR1DLLNR5DL6NR17R6DNR5R2DR"
  'BODY AND DRIVES
  PSET (X + 6, Y), CD
  DRAW "GNR15D2GD BR17 U1HHU2 D2RL14"
  'ENGINES
  PSET (X + 11, Y + 1), 14
  DRAW "R3"
 END IF
END IF

  COLOR 9
  LOCATE KY(A) + 1, KX(A) - 1: PRINT CHR$(A + 48)
  IF KR(A) = 3 THEN COLOR 4
  IF KR(A) = 2 THEN COLOR 14
  IF KR(A) = 1 THEN COLOR 2
  LOCATE KY(A) + 1, KX(A) + 3
  IF LEAVING(A) = 0 THEN PRINT RANGE$(KR(A)) ELSE PRINT "W"
  LOCATE KY(A) - 1, KX(A) - 1: PRINT "     "
 COLOR CLR
 JJ = SH - DM
 IF JJ < 100 AND JJ >= 10 THEN LOCATE KY(A) - 1, KX(A)
 IF JJ > 99 AND JJ < 1000 THEN LOCATE KY(A) - 1, KX(A) - 1
 IF JJ < 10 THEN LOCATE KY(A) - 1, KX(A)
 IF JJ = 1000 THEN LOCATE KY(A) - 1, KX(A) - 1
 END IF
 IF KX(A) > 0 THEN PRINT STR$(JJ)
NEXT A
END SUB

SUB SREPAIRS
IF DAMAGE = 0 THEN GOTO ENDRPRS
V = INT(RND(1) * 10) + 1
IF V <= 2 THEN
 RNDN = 10: CALL RAND: R = RNDM(3)
 IF DAMAGE - R < 0 THEN R = DAMAGE
 DAMAGE = DAMAGE - R
 LOCATE 12, 2: PRINT SPACE$(22)
 IF R > 0 THEN COLOR 15: LOCATE 12, 2: PRINT "SHIP REPAIRS:"; STR$(R); "%"
 FOR TM = 1 TO 6000 * MDELAY: NEXT
END IF

J99 = INT(DAMAGE / 15)
IF J99 < 0 THEN J99 = 0
IF SYSDMG > J99 THEN
 DO
  SYSDMG = SYSDMG - 1
RPR:
  B = INT(RND(1) * 6) + 1
  IF B = 1 AND PDMG = 0 THEN GOTO RPR
  IF B = 2 AND SDMG = 0 THEN GOTO RPR
  IF B = 3 AND WDMG = 0 THEN GOTO RPR
  IF B = 4 AND TDMG = 0 THEN GOTO RPR
  IF B = 5 AND IDMG = 0 THEN GOTO RPR
  IF B = 6 AND LDMG = 0 THEN GOTO RPR
  IF B = 1 THEN
   PDMG = 0
   A$ = "PHASERS"
  END IF
  IF B = 2 THEN SDMG = 0: A$ = "SHIELDS"
  IF B = 3 THEN WDMG = 0: A$ = "WARP DRIVE"
  IF B = 4 THEN TDMG = 0: A$ = "TORPEDOES"
  IF B = 5 THEN IDMG = 0: A$ = "IMPULSE"
  IF B = 6 THEN LDMG = 0: A$ = "LR SENSORS"
  LOCATE 12, 2: PRINT SPACE$(22)
  COLOR 15
  LOCATE 12, 2: PRINT A$; " REPAIRED!"
  FOR TM = 1 TO 6000 * MDELAY: NEXT
 LOOP WHILE SYSDMG > INT(DAMAGE / 15)
END IF
CALL DISPLAY
ENDRPRS:
END SUB

SUB STARSSUB
FOR A = 1 TO 100
 IF STX(A) < 1 THEN
XYLOC:
  Y = INT(RND(1) * 72) + 8: X = INT(RND(1) * 304) + 8
  STX(A) = X: STY(A) = Y
  STC(A) = INT(RND(1) * 15) + 17
 END IF
 NO = 0
 SX = STX(A): SY = STY(A)
 IF POINT(SX, SY) = STC(A) THEN GOTO NXTSTR
 IF POINT(SX, SY) <> 0 AND POINT(SX, SY) <> STC(A) THEN NO = 1
 FOR Z = 1 TO 3
  KX = KX(Z): KY = KY(Z)
  IF KX > 0 THEN
   XX1 = ABS(SX - (KX * 8 + 4)): YY1 = ABS(SY - (KY * 8 - 4))
   IF XX1 < 24 AND YY1 < 16 THEN NO = 1
  END IF
 NEXT Z
 IF NO = 0 THEN PSET (SX, SY), STC(A)
NXTSTR:
NEXT A
END SUB

SUB STATS

ENERGY = 5000
SHIELDS = 1000
PHASERS = 1000
DAMAGE = 0
PROBE = 3
DRIVE = 1000
SHLDS$ = "N"
IMPULSE = 500
SENSORS = 500
SENSORS$ = "OFF"
PROBE$ = "NO"
TORPEDOES = 20

END SUB

SUB TEST
FOR A = 1 TO 40
 IF KTYPE(A) = 5 THEN A0 = A0 + 1
NEXT A
LOCATE 1, 1: COLOR 15: PRINT A0
DO
A$ = INKEY$
LOOP UNTIL A$ <> ""
CLS
CALL DISPLAY
CALL STARSSUB
CALL SHIPSSUB
END SUB

SUB TORPEDOESSUB

NTF:
TRPN = TORPEDOES
IF TRPN > 4 THEN TRPN = 4
TE = 50
IF ENERGY < TE THEN TRPN = 0: GOTO NEE
IF TDMG = 1 THEN TRPN = CINT(TRPN * .51)
IF TRPN * TE > ENERGY THEN TRPN = CINT(ENERGY / TE)
LOCATE 12, 2: PRINT SPACE$(22)
COLOR 7: LOCATE 12, 2
PRINT "NUMBER TO FIRE {"; CHR$(48 + TRPN); "}:";

DO
 A$ = INKEY$
 IF A$ = CHR$(8) THEN GOTO ENDTORPEDO
LOOP WHILE VAL(A$) > TRPN OR A$ < "1" OR A$ > "4"

TRPN = VAL(A$)
COLOR 15
PRINT TRPN
FOR TM = 1 TO 4000 * MDELAY: NEXT
NEE:
IF TRPN = 0 THEN
 LOCATE 12, 2: PRINT SPACE$(22)
 LOCATE 12, 2: COLOR 15
 PRINT "NOT ENOUGH ENERGY!"
 FOR TM = 1 TO 4000 * MDELAY: NEXT
 GOTO ENDTORPEDO
END IF
FOR TL = 1 TO TRPN
 TORPEDO(TL) = 0
 LOCATE 12, 2: PRINT SPACE$(22)
 LOCATE 12, 2: COLOR 7: PRINT "TORPEDO "; CHR$(48 + TL); ":   ": COLOR 15
 LOCATE 12, 13
TTENTER:
 DO
  A$ = INKEY$
 IF A$ = CHR$(8) THEN GOTO ENDTORPEDO
 LOOP WHILE A$ < "1" OR A$ > "3"
 IF KX(VAL(A$)) = 0 AND A$ <> "0" THEN GOTO TTENTER
 TORPEDO(TL) = VAL(A$)
 PRINT A$
 FOR TM = 1 TO 4000 * MDELAY: NEXT
NEXT TL
LOCATE 12, 2: PRINT SPACE$(22)
FOR T9 = 1 TO TRPN: IF TORPEDO(T9) > 0 THEN ENERGY = ENERGY - TE
NEXT T9
LOCATE 12, 2
FOR TT = 1 TO TRPN
 IF TORPEDO(TT) = 0 THEN GOTO NXTTORP
 TORPEDOES = TORPEDOES - 1
 COLOR 7
 LOCATE 12, 2: PRINT SPACE$(22)
 LOCATE 12, 2: PRINT "FIRING TORPEDO "; CHR$(48 + TT); ": ";
 COLOR 15
 TX = KX(TORPEDO(TT)) + 1: TY = KY(TORPEDO(TT))
 AA = 2000: BB = 37: CC = 100

 FOR SND = 1 TO CC
  FOR SS = AA TO BB STEP -100 * SDELAY
   SOUND SS, .05
  NEXT SS
  AA = AA - 100
 NEXT SND

 IF TY = 0 THEN HIT = 0: GOTO TMISS
 FG = 0
 FOR TF = 78 TO TY * 8 - 1 STEP -4
   FG = FG + 1: IF FG > 1 THEN FG = 0
   PSET (TX * 8 - 6, TF), 4
   DRAW "S4R1D2L1U1L1R3"
   PSET (TX * 8 - 8, TF - 1), 42 + FG
   DRAW "S4 F1 BR3E1G1 BD2F1H1 BL3G1"
   FOR TM = 1 TO 200 / WDELAY: NEXT
   PSET (TX * 8 - 6, TF), 0
   DRAW "S4R1D2L1U1L1R3"
   PSET (TX * 8 - 8, TF - 1), 0
   DRAW "S4 F1 BR3E1G1 BD2F1H1 BL3G1"
 NEXT TF

 CALL STARSSUB
 HIT = 105 - (KR(TORPEDO(TT)) * 10)
TMISS:
 V = INT(RND(1) * 100) + 1
 IF V > HIT THEN
  LOCATE 12, 20: COLOR 15: PRINT "MISS"
 FOR TM = 1 TO 4000 * MDELAY: NEXT
 ELSE
  RNDN = 250
  CALL RAND: DM = RNDM(3)
  KD = KDMG(KN(TORPEDO(TT)))
  KS = KSHLD(KN(TORPEDO(TT)))
  K0 = KS - KD - DM: K0 = CINT(K0 / KS * 100)
  KM = 80
  IF K0 < 51 THEN KM = 60
  IF K0 < 26 THEN KM = 40
  KJ = INT(RND(1) * 100) + 1
  KDMG(KN(TORPEDO(TT))) = KDMG(KN(TORPEDO(TT))) + DM
  KD = KDMG(KN(TORPEDO(TT)))
  KS = KSHLD(KN(TORPEDO(TT)))
 
  IF KD >= KS THEN
   KHIT = TORPEDO(TT)
   CALL KDESTROYED
   GOTO NXTTORP
  END IF
  IF KJ > KM THEN
   LOCATE 12, 20: COLOR 15: PRINT "HIT!"
   PSET (TX * 8 - 9, TY * 8 - 8), 0
   DRAW "s4r3d1r2u1r2d1r1d2l1d2r1d1l1d1l3u1l2d1l2u1l1u2r1u2l1u1r1u1bf3p0,0"
   PSET (TX * 8 - 9, TY * 8 - 8), 14
   DRAW "s4r3d1r2u1r2d1r1d2l1d2r1d1l1d1l3u1l2d1l2u1l1u2r1u2l1u1r1u1bf3p14,14"
   OX = TX * 8 - 10: OY = TY * 8 - 8
   FOR OZ = 1 TO 20
P105:
   OOX = INT(RND(1) * 11): OOY = INT(RND(1) * 9)
   OOX = OOX + OX: OOY = OOY + OY
   IF POINT(OOX, OOY) <> 14 THEN GOTO P105
   PSET (OOX, OOY), 8
   NEXT OZ
  ELSE
   LOCATE 12, 20: COLOR 15: PRINT "HIT!"
   PSET (TX * 8 - 9, TY * 8 - 8), 48
   DRAW "s4r3d1r2u1r2d1r1d2l1d2r1d1l1d1l3u1l2d1l2u1l1u2r1u2l1u1r1u1bf3p48,48"
  END IF

  H0 = 300: H1 = 500: IF KJ > KM THEN H0 = 500: H1 = 750
   FOR ZZ = 1 TO H1 / SDELAY
    SND = INT(RND(1) * H0) + 37
    SOUND SND, .025 * SDELAY
   NEXT ZZ
   CALL SHIPSSUB
   LOCATE 12, 2: PRINT SPACE$(22)
   LOCATE 12, 2: COLOR 7: PRINT "DAMAGE:"; : COLOR 15: PRINT DM
  FOR TM = 1 TO 6000 * MDELAY: NEXT
 END IF
NXTTORP:
NEXT TT
IF NEXTTRN = 0 THEN NEXTTRN = .6 ELSE NEXTTRN = 1
ENDTORPEDO:
END SUB

SUB WINGAME
CLS
COLOR 14
IF STARSHIPS = KDSTRYD THEN
 PRINT "THE "; EN$; " STARSHIPS HAVE BEEN"
 PRINT "DESTROYED!"
 GOTO SCOREPRINT
END IF
IF STRDT < 1 THEN
 PRINT "THE "; F$; " STARBASES WERE"
 PRINT "DESTROYED!"
END IF
SCOREPRINT:
COLOR 15
FOR TM = 1 TO 10000 * MDELAY: NEXT
PRINT : PRINT "SCORE:"; CINT(SCORE)
FOR TM = 1 TO 10000 * MDELAY: NEXT
PRINT : PRINT "RATING:"; STR$(CINT(SCORE / TOTAL * 100)); "%"
FOR TM = 1 TO 10000 * MDELAY: NEXT
PRINT : PRINT "PLAY AGAIN?"
PLAYAGN1:
DO
A$ = INKEY$
LOOP WHILE A$ = ""
IF A$ = "Y" THEN RUN
IF A$ = "N" THEN END
GOTO PLAYAGN1

END SUB

